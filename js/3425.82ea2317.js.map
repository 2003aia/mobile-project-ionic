{"version":3,"file":"js/3425.82ea2317.js","mappings":"mLAKO,MAAMA,GAA0BC,EAAAA,EAAAA,IAAY,CACjDC,GAAI,kBACJC,MAAO,KAAM,CACXC,mBAAoB,KACpBC,gBAAiB,KACjBC,uBAAwB,KACxBC,oBAAqB,KACrBC,mBAAoB,KACpBC,gBAAiB,KACjBC,kBAAmB,KACnBC,eAAgB,KAChBC,mBAAoB,KACpBC,uBAAwB,KACxBC,oBAAqB,KACrBC,gBAAiB,KACjBC,aAAc,KACdC,gBAAiB,KACjBC,mBAAoB,CAAEC,OAAO,EAAOC,KAAM,MAC1CC,gBAAiB,KACjBC,mBAAoB,KACpBC,gBAAiB,KACjBC,mBAAoB,KACpBC,gBAAiB,KACjBC,iBAAkB,CAAC,IAErBC,QAAS,CACPC,mBAAqBzB,GACZA,EAAMG,uBAAuBc,KAAKS,SAASC,GAChDA,GAAIC,YAAYF,SAASC,GAAOA,OAItCE,QAAS,CACPC,uBACEC,QAAQC,IAAI,uBACZ,IACE,MAAMC,EAAQ,IAAIC,EAAAA,QACZD,EAAME,SACZ,MAAMC,QAAcH,EAAMI,IAAI,SACxBC,EAAcC,KAAKC,MAAMJ,GAAOA,YAChCK,IAAAA,KAED,oEACD,CAAEL,MAAOE,IAEVI,MAAMC,GAAcC,KAAKzC,uBAAyBwC,EAAS1B,MAG/D,CAFC,MAAOD,GACP4B,KAAKxC,oBAAsBY,CAC5B,CACF,EACDc,iBAAiBe,GACf,IACE,MAAMZ,EAAQ,IAAIC,EAAAA,QACZD,EAAME,SACZ,MAAMC,QAAcH,EAAMI,IAAI,SACxBC,EAAcC,KAAKC,MAAMJ,GAAOA,YAChCK,IAAAA,KAED,gEACD,CAAEL,MAAOE,EAAaO,KAAMA,IAE7BH,MAAMC,GAAcC,KAAKvC,mBAAqBsC,EAAS1B,MAG3D,CAFC,MAAOD,GACP4B,KAAKtC,gBAAkBU,CACxB,CACF,EACDc,gBAAgBgB,GACd,IACE,MAAMb,EAAQ,IAAIC,EAAAA,QACZD,EAAME,SACZ,MAAMC,QAAcH,EAAMI,IAAI,SACxBC,EAAcC,KAAKC,MAAMJ,GAAOA,YAChCK,IAAAA,KAED,+DACD,CAAEL,MAAOE,EAAaQ,IAAKA,IAE5BJ,MAAMC,GAAcC,KAAKrC,kBAAoBoC,EAAS1B,MAG1D,CAFC,MAAOD,GACP4B,KAAKpC,eAAiBQ,CACvB,CACF,EACDc,mBACE,IACE,MAAMG,EAAQ,IAAIC,EAAAA,QACZD,EAAME,SACZ,MAAMC,QAAcH,EAAMI,IAAI,SACxBC,EAAcC,KAAKC,MAAMJ,GAAOA,MAChCW,EAAKR,KAAKC,MAAMJ,GAAOY,WACvBP,IAAAA,KAED,gEACD,CAAEL,MAAOE,EAAaW,GAAIF,IAE3BL,MAAMC,GAAcC,KAAKnC,mBAAqBkC,EAAS1B,MAG3D,CAFC,MAAOD,GACP4B,KAAK9B,gBAAkBE,CACxB,CACF,EACDc,iBAAiBM,EAAOW,GACtB,UACQN,IAAAA,KAED,gEACD,CAAEL,MAAOA,EAAOa,GAAIF,IAErBL,MAAKZ,UACJc,KAAK3C,mBAAqB0C,EAAS1B,KAGnC,MAAMgB,EAAQ,IAAIC,EAAAA,QACZD,EAAME,SACZ,MAAMC,QAAcH,EAAMI,IAAI,SACxBC,EAAcC,KAAKC,MAAMJ,SAOzBH,EAAMiB,IACV,QACAX,KAAKY,UAAU,IACVb,EACHU,KAAM,IAAIV,EAAYU,KAAMD,KAJhC,GAWL,CAFC,MAAO/B,GACP4B,KAAK1C,gBAAkBc,CACxB,CACF,EACDc,iBAAiBiB,GACf,IACE,MAAMd,EAAQ,IAAIC,EAAAA,QACZD,EAAME,SACZ,MAAMC,QAAcH,EAAMI,IAAI,SACxBC,EAAcC,KAAKC,MAAMJ,GAAOA,YAChCK,IAAAA,KAED,gEACD,CAAEL,MAAOE,EAAaW,GAAIF,IAE3BL,MAAKZ,UACJc,KAAKnC,mBAAmBQ,KAAO2B,KAAKnC,oBAAoBQ,KAAKmC,QAC1DzB,GACQA,EAAG0B,OAASN,IAGvB,MAAMO,EAAWf,KAAKC,MAAMJ,GACtBY,EAAOJ,KAAKnC,oBAAoBQ,KAAKmC,QAAQzB,GAC1CA,GAAI0B,OAASN,IAEhBQ,EAAa,CACjBC,KAAMF,EAASE,KACfC,MAAOH,EAASG,MAChBC,MAAOJ,EAASI,MAChBC,SAAUL,EAASK,SACnBvB,MAAOkB,EAASlB,MAChBY,KAAMA,GAAMY,KAAKjC,GAAOA,GAAI0B,cAExBpB,EAAMiB,IAAI,QAASX,KAAKY,UAAUI,IACxCX,KAAK7B,mBAAqB4B,EAAS1B,IAAnC,GAIL,CAFC,MAAOD,GACP4B,KAAK1B,gBAAkBF,CACxB,CACF,EACDc,kBAAkBiB,GAChB,IACE,MAAMd,EAAQ,IAAIC,EAAAA,QACZD,EAAME,SACZ,MAAMC,QAAcH,EAAMI,IAAI,SACxBC,EAAcC,KAAKC,MAAMJ,GAAOA,YAChCK,IAAAA,KAED,iEACD,CACEL,MAAOE,EACPW,GAAIF,IAGPL,MAAKZ,UACJc,KAAKlC,uBAAyBiC,EAAS1B,IAAvC,GAIL,CAFC,MAAOD,GACP4B,KAAKjC,oBAAsBK,CAC5B,CACF,EACDc,iBAAiB+B,GACf,IACE,MAAM5B,EAAQ,IAAIC,EAAAA,QACZD,EAAME,SACZ,MAAMC,QAAcH,EAAMI,IAAI,SACxBC,EAAcC,KAAKC,MAAMJ,GAAOA,YAChCK,IAAAA,KAED,gEACD,CAAEL,MAAOE,EAAauB,UAAWA,IAElCnB,MAAMC,IACLC,KAAKzB,mBAAqBwB,EAAS1B,IAAnC,GAIL,CAFC,MAAOD,GACP4B,KAAKxB,gBAAkBJ,CACxB,CACF,EACDc,iBAAiB+B,EAAWC,GAC1B,IACE,MAAM7B,EAAQ,IAAIC,EAAAA,QACZD,EAAME,SACZ,MAAMC,QAAcH,EAAMI,IAAI,SACxBC,EAAcC,KAAKC,MAAMJ,GAAOA,YAChCK,IAAAA,KAED,gEACD,CAAEL,MAAOE,EAAauB,UAAWA,EAAWC,OAAQA,IAErDpB,MAAMC,IAGLC,KAAKmB,WAAWF,GAChBjB,KAAKvB,mBAAqBsB,EAAS1B,IAAnC,GAIL,CAFC,MAAOD,GACP4B,KAAKtB,gBAAkBN,CACxB,CACF,EACDc,cAAciB,EAAIU,EAAOC,EAAOM,EAAUC,EAAOC,GAC/C,IACE,MAAMjC,EAAQ,IAAIC,EAAAA,QACZD,EAAME,SACZ,MAAMC,QAAcH,EAAMI,IAAI,SACxBC,EAAcC,KAAKC,MAAMJ,SACzBK,IAAAA,KACG,6DAA6D,CAClEL,MAAOE,EAAYF,MACnBqB,MAAOA,EACPC,MAAOA,EACPT,GAAIF,EACJiB,SAAUA,EACVE,UAAWA,EACXD,MAAOA,IAERvB,MAAMC,IAGLC,KAAKhC,gBAAkB+B,EAAS1B,IAAhC,GAIL,CAFC,MAAOD,GACP4B,KAAK/B,aAAeG,CACrB,CACF,I,6GCzOgC,oB,WAMlB,K,WACA,Q,WAEA,S,WAEA,S,mOAnCjBmD,EAAAA,EAAAA,IAoHWC,EAAA,M,kBAnHT,IAAQ,EAARC,EAAAA,EAAAA,IAAQC,GAMsB,IAAtBC,EAAAA,gBAAgBC,SAAM,WAL9BL,EAAAA,EAAAA,IAWSM,EAAA,C,MAVNC,OAAQ,0BACTC,OAAO,QACPC,WAAW,IACXC,UAAU,IAEVC,MAAM,iBANR,CAQmB,gBAAYC,EAAAA,EAAAA,KAC3B,IAA8B,EAA9BV,EAAAA,EAAAA,IAA8BW,EAAA,CAAjBxB,KAAK,e,SATtB,WAaAW,EAAAA,EAAAA,IAoGSM,EAAA,C,MAnGNC,OAAQ,0BACTC,OAAO,QACPC,WAAW,IACXC,UAAU,IAEVC,MAAM,iBANR,CAQmB,kBAAcC,EAAAA,EAAAA,KAC7B,IAAwD,EAAxDV,EAAAA,EAAAA,IAAwDY,EAAA,CAA9CC,MAAM,cAAY,C,kBAAC,IAAgB,M,SAE9B,gBAAYH,EAAAA,EAAAA,KAG3B,IAOU,EAPVV,EAAAA,EAAAA,IAOUc,EAAA,M,kBANR,IAAoB,EAApBd,EAAAA,EAAAA,IAAoBe,EAAA,M,kBAAX,IAAC,M,OACVf,EAAAA,EAAAA,IAAuBe,EAAA,M,kBAAd,IAAI,M,OAEbf,EAAAA,EAAAA,IAAwBe,EAAA,M,kBAAf,IAAK,M,OAEdf,EAAAA,EAAAA,IAAwBe,EAAA,M,kBAAf,IAAK,M,iBACN,aAEVC,EAAAA,EAAAA,IAUWC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAVYhB,EAAAA,gBAAN5C,K,WAAjBwC,EAAAA,EAAAA,IAUWqB,EAAA,CAV6BC,IAAK9D,GAAE,C,kBAC7C,IAQU,EARV0C,EAAAA,EAAAA,IAQUc,EAAA,M,kBAPR,IAAuD,EAAvDd,EAAAA,EAAAA,IAAuDe,EAAA,CAA9CF,MAAM,aAAW,C,kBAAE,IAAgB,mBAAbvD,GAAI+D,QAAM,M,KAAzC,OACArB,EAAAA,EAAAA,IAEUe,EAAA,CAFDF,MAAM,aAAW,C,kBACxB,IAA+B,mBAA5BvD,GAAIgE,KAAOhE,GAAIgE,KAAI,W,KADxB,OAIAtB,EAAAA,EAAAA,IAAwDe,EAAA,CAA/CF,MAAM,aAAW,C,kBAAC,IAAc,mBAAXvD,GAAIiE,MAAO,QAAK,M,KAA9C,OACAvB,EAAAA,EAAAA,IAAoEe,EAAA,CAA3DF,MAAM,aAAW,C,kBAAC,IAA+B,mBAA5BX,EAAAA,eAAc,IAAKsB,QAAM,M,cAPzD,S,KADF,kB,0FAwGR,GAAeC,EAAAA,EAAAA,IAAgB,CAC7BtC,KAAM,gCACNuC,WAAY,CACVC,KADU,IAEVC,QAFU,KAGVC,QAHU,KAIVC,OAJU,IAKVC,QALU,KAOVC,WAPU,KAQVC,OARU,KASVC,OAAMA,EAAAA,IAERC,QAAS,KACJC,EAAAA,EAAAA,IAAW5G,EAAAA,EAAyB,CAAC,iBAE1C6G,SAAU,CACRC,iBACE,OAAO/D,KAAKgE,OAAO5G,MAAM6G,OAAOC,iBAAiBpG,wBAC7CO,KAAK,IAAI8F,SACTnE,KAAKgE,OAAO5G,MAAM6G,OAAOC,iBAAiBpG,wBACtCO,KAAK,IAAI8F,SACb,EACL,EACDC,kBACE,MAAO,IAAIpE,KAAK+D,eAAeM,MAAM,GACtC,GAEHC,UACEtE,KAAKuE,YACHvE,KAAKwE,OAAOC,OAAOtE,IAIrBhB,QAAQC,IAAIY,KAAKwE,OAAOC,OAAQ,SACjC,EACDpG,OACE,MAAO,CACLA,KAAM,CACJ,CACE6D,MAAO,sDACPwC,QAAS,IACTC,OAAQ,cACR7B,OAAQ,aACR8B,cAAe,aACfC,QAAS,aACTC,QAAS,IACTC,SAAU,IACVC,cAAe,MAetB,EACDC,QACE,MAAMC,GAASC,EAAAA,EAAAA,MAEf,MAAO,CACLD,SACAE,cAFK,MAGLC,oBAHK,MAILC,sBAAqBA,EAAAA,IAExB,I,UCjNH,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://test/./src/stores/personalAccount.js","webpack://test/./src/views/PersonalAccountPaymentHistory.vue","webpack://test/./src/views/PersonalAccountPaymentHistory.vue?bd25"],"sourcesContent":["import { defineStore } from \"pinia\";\r\nimport axios from \"axios\";\r\nimport { Storage } from \"@ionic/storage\";\r\n// import { useLoginStore } from \"./login\";\r\n\r\nexport const usePersonalAccountStore = defineStore({\r\n  id: \"personalAccount\",\r\n  state: () => ({\r\n    addAccountResponse: null,\r\n    addAccountError: null,\r\n    getSettlementsResponse: null,\r\n    getSettlementsError: null,\r\n    getStreetsResponse: null,\r\n    getStreetsError: null,\r\n    getHousesResponse: null,\r\n    getHousesError: null,\r\n    getAccountResponse: null,\r\n    paymentHistoryResponse: null,\r\n    paymentHistoryError: null,\r\n    sberPayResponse: null,\r\n    sberPayError: null,\r\n    getAccountError: null,\r\n    delAccountResponse: { error: false, data: null },\r\n    delAccountError: null,\r\n    getIndicesResponse: null,\r\n    getIndicesError: null,\r\n    setIndicesResponse: null,\r\n    setIndicesError: null,\r\n    personalItemData: {},\r\n  }),\r\n  getters: {\r\n    getSettlementsList: (state) => {\r\n      return state.getSettlementsResponse.data.flatMap((el) =>\r\n        el?.settlements.flatMap((el) => el)\r\n      );\r\n    },\r\n  },\r\n  actions: {\r\n    async getSettlements() {\r\n      console.log(\"getting settlements\");\r\n      try {\r\n        const store = new Storage();\r\n        await store.create();\r\n        const token = await store.get(\"token\");\r\n        const tokenParsed = JSON.parse(token).token;\r\n        await axios\r\n          .post(\r\n            `https://fhd.aostng.ru/vesta_storage/hs/API_STNG/V2/GetSettlements`,\r\n            { token: tokenParsed }\r\n          )\r\n          .then((response) => (this.getSettlementsResponse = response.data));\r\n      } catch (error) {\r\n        this.getSettlementsError = error;\r\n      }\r\n    },\r\n    async getStreets(s_id) {\r\n      try {\r\n        const store = new Storage();\r\n        await store.create();\r\n        const token = await store.get(\"token\");\r\n        const tokenParsed = JSON.parse(token).token;\r\n        await axios\r\n          .post(\r\n            `https://fhd.aostng.ru/vesta_storage/hs/API_STNG/V2/GetStreets`,\r\n            { token: tokenParsed, s_id: s_id }\r\n          )\r\n          .then((response) => (this.getStreetsResponse = response.data));\r\n      } catch (error) {\r\n        this.getStreetsError = error;\r\n      }\r\n    },\r\n    async getHouses(ids) {\r\n      try {\r\n        const store = new Storage();\r\n        await store.create();\r\n        const token = await store.get(\"token\");\r\n        const tokenParsed = JSON.parse(token).token;\r\n        await axios\r\n          .post(\r\n            `https://fhd.aostng.ru/vesta_storage/hs/API_STNG/V2/GetHouses`,\r\n            { token: tokenParsed, ids: ids }\r\n          )\r\n          .then((response) => (this.getHousesResponse = response.data));\r\n      } catch (error) {\r\n        this.getHousesError = error;\r\n      }\r\n    },\r\n    async getAccount() {\r\n      try {\r\n        const store = new Storage();\r\n        await store.create();\r\n        const token = await store.get(\"token\");\r\n        const tokenParsed = JSON.parse(token).token;\r\n        const lc = JSON.parse(token).lics;\r\n        await axios\r\n          .post(\r\n            `https://fhd.aostng.ru/vesta_storage/hs/API_STNG/V2/GetAccount`,\r\n            { token: tokenParsed, LC: lc }\r\n          )\r\n          .then((response) => (this.getAccountResponse = response.data));\r\n      } catch (error) {\r\n        this.getAccountError = error;\r\n      }\r\n    },\r\n    async addAccount(token, lc) {\r\n      try {\r\n        await axios\r\n          .post(\r\n            `https://fhd.aostng.ru/vesta_storage/hs/API_STNG/V2/AddAccount`,\r\n            { token: token, LC: lc }\r\n          )\r\n          .then(async (response) => {\r\n            this.addAccountResponse = response.data;\r\n\r\n            // const counterStorage = useLoginStore();\r\n            const store = new Storage();\r\n            await store.create();\r\n            const token = await store.get(\"token\");\r\n            const tokenParsed = JSON.parse(token);\r\n            // console.log(response.data, tokenParsed, \"test addaccount\");\r\n            /* counterStorage\r\n                .authUser(tokenParsed.phone, tokenParsed.password)\r\n                .then(async () => {\r\n                  const store = new Storage();\r\n                  await store.create(); */\r\n            await store.set(\r\n              \"token\",\r\n              JSON.stringify({\r\n                ...tokenParsed,\r\n                lics: [...tokenParsed.lics, lc],\r\n              })\r\n            );\r\n            /*  }); */\r\n          });\r\n      } catch (error) {\r\n        this.addAccountError = error;\r\n      }\r\n    },\r\n    async delAccount(lc) {\r\n      try {\r\n        const store = new Storage();\r\n        await store.create();\r\n        const token = await store.get(\"token\");\r\n        const tokenParsed = JSON.parse(token).token;\r\n        await axios\r\n          .post(\r\n            `https://fhd.aostng.ru/vesta_storage/hs/API_STNG/V2/DelAccount`,\r\n            { token: tokenParsed, LC: lc }\r\n          )\r\n          .then(async (response) => {\r\n            this.getAccountResponse.data = this.getAccountResponse?.data.filter(\r\n              (el) => {\r\n                return el.code !== lc;\r\n              }\r\n            );\r\n            const userData = JSON.parse(token);\r\n            const lics = this.getAccountResponse?.data.filter((el) => {\r\n              return el?.code !== lc;\r\n            });\r\n            const userObject = {\r\n              name: userData.name,\r\n              phone: userData.phone,\r\n              email: userData.email,\r\n              password: userData.password,\r\n              token: userData.token,\r\n              lics: lics?.map((el) => el?.code),\r\n            };\r\n            await store.set(\"token\", JSON.stringify(userObject));\r\n            this.delAccountResponse = response.data;\r\n          });\r\n      } catch (error) {\r\n        this.delAccountError = error;\r\n      }\r\n    },\r\n    async getPayments(lc /*  beginDate, endDate */) {\r\n      try {\r\n        const store = new Storage();\r\n        await store.create();\r\n        const token = await store.get(\"token\");\r\n        const tokenParsed = JSON.parse(token).token;\r\n        await axios\r\n          .post(\r\n            `https://fhd.aostng.ru/vesta_storage/hs/API_STNG/V2/GetPayments`,\r\n            {\r\n              token: tokenParsed,\r\n              LC: lc /* beginDate: beginDate, endDate: endDate */,\r\n            }\r\n          )\r\n          .then(async (response) => {\r\n            this.paymentHistoryResponse = response.data;\r\n          });\r\n      } catch (error) {\r\n        this.paymentHistoryError = error;\r\n      }\r\n    },\r\n    async getIndices(counterId) {\r\n      try {\r\n        const store = new Storage();\r\n        await store.create();\r\n        const token = await store.get(\"token\");\r\n        const tokenParsed = JSON.parse(token).token;\r\n        await axios\r\n          .post(\r\n            `https://fhd.aostng.ru/vesta_storage/hs/API_STNG/V2/GetIndices`,\r\n            { token: tokenParsed, counterId: counterId }\r\n          )\r\n          .then((response) => {\r\n            this.getIndicesResponse = response.data;\r\n          });\r\n      } catch (error) {\r\n        this.getIndicesError = error;\r\n      }\r\n    },\r\n    async setIndices(counterId, indice) {\r\n      try {\r\n        const store = new Storage();\r\n        await store.create();\r\n        const token = await store.get(\"token\");\r\n        const tokenParsed = JSON.parse(token).token;\r\n        await axios\r\n          .post(\r\n            `https://fhd.aostng.ru/vesta_storage/hs/API_STNG/V2/SetIndices`,\r\n            { token: tokenParsed, counterId: counterId, indice: indice }\r\n          )\r\n          .then((response) => {\r\n            /* const counterStorage = usePersonalAccountStore()\r\n            counterStorage.getIndices(counterId) */\r\n            this.getIndices(counterId);\r\n            this.setIndicesResponse = response.data;\r\n          });\r\n      } catch (error) {\r\n        this.setIndicesError = error;\r\n      }\r\n    },\r\n    async sberPay(lc, phone, email, accruals, sumTO, penalties) {\r\n      try {\r\n        const store = new Storage();\r\n        await store.create();\r\n        const token = await store.get(\"token\");\r\n        const tokenParsed = JSON.parse(token);\r\n        await axios\r\n          .post(`https://fhd.aostng.ru/vesta_storage/hs/API_STNG/V2/SberPay`, {\r\n            token: tokenParsed.token,\r\n            phone: phone,\r\n            email: email,\r\n            LC: lc,\r\n            accruals: accruals,\r\n            penalties: penalties,\r\n            sumTO: sumTO,\r\n          })\r\n          .then((response) => {\r\n            /* const counterStorage = usePersonalAccountStore()\r\n            counterStorage.getIndices(counterId) */\r\n            this.sberPayResponse = response.data;\r\n          });\r\n      } catch (error) {\r\n        this.sberPayError = error;\r\n      }\r\n    },\r\n  },\r\n});\r\n","<template>\r\n  <ion-page>\r\n    <Back />\r\n    <Layout\r\n      :btnSrc=\"'/personalAccountPayment'\"\r\n      height=\"false\"\r\n      outlineBtn=\".\"\r\n      filledBtn=\".\"\r\n      v-if=\"paymentHistory?.length === 0\"\r\n      title=\"Лицевые счета\"\r\n    >\r\n      <template v-slot:main-content>\r\n        <ion-spinner name=\"bubbles\" />\r\n      </template>\r\n    </Layout>\r\n\r\n    <Layout\r\n      :btnSrc=\"'/personalAccountPayment'\"\r\n      height=\"false\"\r\n      outlineBtn=\".\"\r\n      filledBtn=\".\"\r\n      v-else\r\n      title=\"Лицевые счета\"\r\n    >\r\n      <template v-slot:header-content>\r\n        <ion-text class=\"main-title\">История платежей</ion-text>\r\n      </template>\r\n      <template v-slot:main-content>\r\n        <!-- <ion-list v-for=\"el in paymentHistory\" :key=\"el.date\"> -->\r\n        <!-- <ion-text class=\"title\">История платежей</ion-text> -->\r\n        <ion-row>\r\n          <ion-col>№</ion-col>\r\n          <ion-col>Дата</ion-col>\r\n\r\n          <ion-col>Сумма</ion-col>\r\n\r\n          <ion-col>Автор</ion-col>\r\n        </ion-row>\r\n\r\n        <ion-list v-for=\"el in paymentHistory\" :key=\"el\">\r\n          <ion-row>\r\n            <ion-col class=\"sub-title\"> {{ el?.number }} </ion-col>\r\n            <ion-col class=\"sub-title\">\r\n              {{ el?.date ? el?.date : \"-\" }}\r\n            </ion-col>\r\n\r\n            <ion-col class=\"sub-title\">{{ el?.summ }} руб.</ion-col>\r\n            <ion-col class=\"sub-title\">{{ paymentHistory[0]?.author }}</ion-col>\r\n          </ion-row>\r\n        </ion-list>\r\n\r\n        <!-- <ion-item>\r\n          <ion-text>Дата</ion-text>\r\n          <ion-text class=\"sub-title\" slot=\"end\">\r\n            {{ paymentHistory[0]?.date ? paymentHistory[0]?.date : \"-\" }}\r\n          </ion-text>\r\n        </ion-item>\r\n        <ion-item>\r\n          <ion-text>№</ion-text>\r\n          <ion-text class=\"sub-title\" slot=\"end\">\r\n            {{ paymentHistory[0]?.number }}\r\n          </ion-text>\r\n        </ion-item>\r\n\r\n        <ion-item>\r\n          <ion-text>Сумма</ion-text>\r\n          <ion-text class=\"sub-title\" slot=\"end\">\r\n            {{ paymentHistory[0]?.summ }}\r\n          </ion-text>\r\n        </ion-item>\r\n        <ion-item>\r\n          <ion-text>Автор</ion-text>\r\n          <ion-text class=\"sub-title\" slot=\"end\">\r\n            {{ paymentHistory[0]?.author }}\r\n          </ion-text>\r\n        </ion-item> -->\r\n\r\n        <!-- </ion-list> -->\r\n      </template>\r\n\r\n      <!-- <template v-slot:content>\r\n        <div v-if=\"paymentHistory?.length > 1\">\r\n          <ion-list v-for=\"el in paymentHistory2\" :key=\"el\">\r\n            <LayoutBox>\r\n              <template v-slot:content>\r\n                <ion-text class=\"title\">История платежей</ion-text>\r\n                <ion-item>\r\n                  <ion-text>Дата</ion-text>\r\n                  <ion-text class=\"sub-title\" slot=\"end\">\r\n                    {{ el?.date ? el?.date : \"-\" }}\r\n                  </ion-text>\r\n                </ion-item>\r\n                <ion-item>\r\n                  <ion-text>№</ion-text>\r\n                  <ion-text class=\"sub-title\" slot=\"end\">\r\n                    {{ el?.number }}\r\n                  </ion-text>\r\n                </ion-item>\r\n\r\n                <ion-item>\r\n                  <ion-text>Сумма</ion-text>\r\n                  <ion-text class=\"sub-title\" slot=\"end\">\r\n                    {{ el?.summ }}\r\n                  </ion-text>\r\n                </ion-item>\r\n                <ion-item>\r\n                  <ion-text>Автор</ion-text>\r\n                  <ion-text class=\"sub-title\" slot=\"end\">\r\n                    {{ el?.author }}\r\n                  </ion-text>\r\n                </ion-item>\r\n              </template>\r\n            </LayoutBox>\r\n          </ion-list>\r\n        </div>\r\n      </template> -->\r\n    </Layout>\r\n  </ion-page>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from \"vue\";\r\nimport { useRouter } from \"vue-router\";\r\nimport Layout from \"../components/Layout.vue\";\r\nimport {\r\n  IonPage,\r\n  IonText,\r\n  IonList,\r\n  IonSpinner,\r\n  IonCol,\r\n  IonRow,\r\n} from \"@ionic/vue\";\r\nimport {\r\n  pencilOutline,\r\n  documentTextOutline,\r\n  chevronForwardOutline,\r\n} from \"ionicons/icons\";\r\nimport Back from \"../components/Back.vue\";\r\n// import LayoutBox from \"../components/LayoutBox.vue\";\r\nimport { mapActions } from \"pinia\";\r\nimport { usePersonalAccountStore } from \"../stores/personalAccount\";\r\n// import moment from \"moment\";\r\n\r\nexport default defineComponent({\r\n  name: \"personalAccountPaymentHistory\",\r\n  components: {\r\n    Back,\r\n    IonList,\r\n    IonPage,\r\n    Layout,\r\n    IonText,\r\n    // LayoutBox,\r\n    IonSpinner,\r\n    IonCol,\r\n    IonRow,\r\n  },\r\n  methods: {\r\n    ...mapActions(usePersonalAccountStore, [\"getPayments\"]),\r\n  },\r\n  computed: {\r\n    paymentHistory() {\r\n      return this.$pinia.state.value?.personalAccount?.paymentHistoryResponse\r\n        ?.data[0]?.payments\r\n        ? this.$pinia.state.value?.personalAccount?.paymentHistoryResponse\r\n            ?.data[0]?.payments\r\n        : [];\r\n    },\r\n    paymentHistory2() {\r\n      return [...this.paymentHistory.slice(1)];\r\n    },\r\n  },\r\n  mounted() {\r\n    this.getPayments(\r\n      this.$route.params.lc\r\n      /*  \"20010101\",\r\n      moment().format(\"YYYYMMDD\") */\r\n    );\r\n    console.log(this.$route.params, \"params\");\r\n  },\r\n  data() {\r\n    return {\r\n      data: [\r\n        {\r\n          title: \"Разовые услуги для абонентов АО «Сахатранснефтегаз»\",\r\n          address: \"-\",\r\n          status: \"В обработке\",\r\n          number: \"19.04.2022\",\r\n          dateAdmission: \"19.04.2022\",\r\n          dateDue: \"19.04.2022\",\r\n          comment: \"-\",\r\n          contract: \"-\",\r\n          dateBussiness: \"-\",\r\n        },\r\n        /*      {\r\n            title: \"Разовые услуги для абонентов АО «Сахатранснефтегаз»\",\r\n            address: \"-\",\r\n            status: \"В обработке\",\r\n            number: \"19.04.2022\",\r\n            dateAdmission: \"19.04.2022\",\r\n            dateDue: \"19.04.2022\",\r\n            comment: \"-\",\r\n            contract: \"-\",\r\n            dateBussiness: \"-\",\r\n          }, */\r\n      ],\r\n    };\r\n  },\r\n  setup() {\r\n    const router = useRouter();\r\n\r\n    return {\r\n      router,\r\n      pencilOutline,\r\n      documentTextOutline,\r\n      chevronForwardOutline,\r\n    };\r\n  },\r\n});\r\n</script>\r\n\r\n<style scoped>\r\nion-row {\r\n  padding-top: 10px;\r\n  padding-bottom: 10px;\r\n  border-bottom: solid 1px #e0e0e0;\r\n}\r\nion-row:last-child {\r\n  border-bottom: none;\r\n}\r\nion-col {\r\n  word-break: break-all;\r\n}\r\nion-list {\r\n  /* background: #f5f5f5; */\r\n  background-color: rgba(0, 0, 0, 0);\r\n}\r\n.text {\r\n  margin-top: 15px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.sub-title {\r\n  margin: 0;\r\n  /* background: red; */\r\n}\r\nion-spinner {\r\n  margin: 0;\r\n}\r\n</style>\r\n","import { render } from \"./PersonalAccountPaymentHistory.vue?vue&type=template&id=d88d52b4&scoped=true\"\nimport script from \"./PersonalAccountPaymentHistory.vue?vue&type=script&lang=js\"\nexport * from \"./PersonalAccountPaymentHistory.vue?vue&type=script&lang=js\"\n\nimport \"./PersonalAccountPaymentHistory.vue?vue&type=style&index=0&id=d88d52b4&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\User\\\\Downloads\\\\mobile-project-ionic\\\\mobile-project-ionic\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-d88d52b4\"]])\n\nexport default __exports__"],"names":["usePersonalAccountStore","defineStore","id","state","addAccountResponse","addAccountError","getSettlementsResponse","getSettlementsError","getStreetsResponse","getStreetsError","getHousesResponse","getHousesError","getAccountResponse","paymentHistoryResponse","paymentHistoryError","sberPayResponse","sberPayError","getAccountError","delAccountResponse","error","data","delAccountError","getIndicesResponse","getIndicesError","setIndicesResponse","setIndicesError","personalItemData","getters","getSettlementsList","flatMap","el","settlements","actions","async","console","log","store","Storage","create","token","get","tokenParsed","JSON","parse","axios","then","response","this","s_id","ids","lc","lics","LC","set","stringify","filter","code","userData","userObject","name","phone","email","password","map","counterId","indice","getIndices","accruals","sumTO","penalties","_createBlock","_component_ion_page","_createVNode","_component_Back","_ctx","length","_component_Layout","btnSrc","height","outlineBtn","filledBtn","title","_withCtx","_component_ion_spinner","_component_ion_text","class","_component_ion_row","_component_ion_col","_createElementBlock","_Fragment","_renderList","_component_ion_list","key","number","date","summ","author","defineComponent","components","Back","IonList","IonPage","Layout","IonText","IonSpinner","IonCol","IonRow","methods","mapActions","computed","paymentHistory","$pinia","value","personalAccount","payments","paymentHistory2","slice","mounted","getPayments","$route","params","address","status","dateAdmission","dateDue","comment","contract","dateBussiness","setup","router","useRouter","pencilOutline","documentTextOutline","chevronForwardOutline","__exports__","render"],"sourceRoot":""}
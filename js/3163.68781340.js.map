{"version":3,"file":"js/3163.68781340.js","mappings":"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","sources":["webpack://stng/./src/stores/services.js","webpack://stng/./src/components/ButtonSelect.vue","webpack://stng/./src/components/ButtonSelect.vue?a791","webpack://stng/./src/components/LayoutBox.vue","webpack://stng/./src/components/LayoutBox.vue?f0f9","webpack://stng/./src/views/ServicesOne.vue","webpack://stng/./src/views/ServicesOne.vue?f72e"],"sourcesContent":["import { defineStore } from \"pinia\";\r\nimport axios from \"axios\";\r\nimport { Storage } from \"@ionic/storage\";\r\nconst apiUrl = \"https://api.aostng.ru/api/v2\";\r\n// let apiUrlStng = '${apiUrlStng2}'\r\nlet apiUrlStng2 = 'https://fhd.aostng.ru/vesta/hs/API_STNG/V2/'\r\n\r\nexport const useServicesStore = defineStore({\r\n  id: \"services\",\r\n  state: () => ({\r\n    formResponse: null,\r\n    formResponseError: null,\r\n    callInspectorResponse: null,\r\n    callInspectorError: null,\r\n    servicesResponse: null,\r\n    servicesResponseError: null,\r\n    form: {},\r\n    select: {\r\n      GAS_SLUCHI: null,\r\n      GAS_HARAKTER: null,\r\n      GAS_VID_USLUG: null,\r\n    },\r\n    servicesOneNext: false,\r\n    techAllianceConnection: false,\r\n    addressResponse: null,\r\n    addressError: null,\r\n    filesResponse: [],\r\n    filesResponseError: null,\r\n    listServicesResponse: null,\r\n    listServicesResponseError: null,\r\n    camerasResponse: null,\r\n    camerasError: null,\r\n    requestsInfo: null,\r\n    \r\n  }),\r\n  getters: {\r\n    setForm: (state) => {\r\n      return (value) => [...state.form, ...value];\r\n    },\r\n  },\r\n  actions: {\r\n    async getCameras() {\r\n      try {\r\n        await axios\r\n          .get(`${apiUrl}/camera/get`)\r\n          .then((response) => (this.camerasResponse = response.data));\r\n      } catch (error) {\r\n        this.camerasError = error;\r\n      }\r\n    },\r\n    async getListServices() {\r\n      const store = new Storage();\r\n      await store.create();\r\n      const token = await store.get(\"token\");\r\n      const tokenParsed = JSON.parse(token).token;\r\n      try {\r\n        await axios\r\n          .post(\r\n            `${apiUrlStng2}ListServices`,\r\n            {\r\n              token: tokenParsed,\r\n            }\r\n          )\r\n          .then((response) => (this.listServicesResponse = response.data));\r\n      } catch (error) {\r\n        this.listServicesResponseError = error;\r\n      }\r\n    },\r\n    async getForms() {\r\n      try {\r\n        await axios\r\n          .get(\r\n            `https://aostng.ru/api/?action=getAll&format=json&page=3&limit=20`\r\n          )\r\n          .then((response) => (this.formResponse = response.data));\r\n      } catch (error) {\r\n        this.formResponseError = error;\r\n      }\r\n    },\r\n    async uploadFiles(files) {\r\n      const store = new Storage();\r\n      await store.create();\r\n      const token = await store.get(\"token\");\r\n      const tokenParsed = JSON.parse(token).token;\r\n      try {\r\n        let check = files.filter((el) => {\r\n          if (el.file !== false) {\r\n            return el;\r\n          }\r\n        });\r\n        for (let index = 0; index < check.length; index++) {\r\n          const element = check[index];\r\n          await axios\r\n            .post(\r\n              `${apiUrlStng2}get_file`,\r\n              {\r\n                token: tokenParsed,\r\n                title: element.title,\r\n                file: element.file,\r\n              }\r\n            )\r\n            .then((response) =>\r\n              this.filesResponse.push({\r\n                ...response.data,\r\n                field: element.field,\r\n                text: element.text,\r\n              })\r\n            );\r\n        }\r\n      } catch (error) {\r\n        this.filesResponseError = error;\r\n      }\r\n    },\r\n    async services(forms) {\r\n      const store = new Storage();\r\n      await store.create();\r\n      const token = await store.get(\"token\");\r\n      const tokenParsed = JSON.parse(token).token;\r\n      try {\r\n        await axios\r\n          .post(`${apiUrlStng2}Services`, {\r\n            token: tokenParsed,\r\n            data: {\r\n              status: [\r\n                {\r\n                  CODE: \"120\",\r\n                  VALUE: \"Принят\",\r\n                },\r\n                {\r\n                  CODE: \"23\",\r\n                  VALUE: \"В обработке\",\r\n                },\r\n                {\r\n                  CODE: \"26\",\r\n                  VALUE: \"Выполнено\",\r\n                },\r\n                {\r\n                  CODE: \"24\",\r\n                  VALUE: \"Требуется документ\",\r\n                },\r\n                {\r\n                  CODE: \"25\",\r\n                  VALUE: \"Требует оплаты\",\r\n                },\r\n                {\r\n                  CODE: \"22\",\r\n                  VALUE: \"Отклонен\",\r\n                },\r\n              ],\r\n              forms: forms,\r\n            },\r\n          })\r\n          .then((response) => (this.servicesResponse = response.data));\r\n      } catch (error) {\r\n        this.servicesResponseError = error;\r\n      }\r\n    },\r\n    async callInspector(lc, phone) {\r\n      try {\r\n        const store = new Storage();\r\n        await store.create();\r\n        const token = await store.get(\"token\");\r\n        const tokenParsed = JSON.parse(token).token;\r\n        await axios\r\n          .post(\r\n            `${apiUrlStng2}CallInspector`,\r\n            { token: tokenParsed, LC: lc, phone: phone }\r\n          )\r\n          .then((response) => (this.callInspectorResponse = response.data));\r\n      } catch (error) {\r\n        this.callInspectorError = error;\r\n      }\r\n    },\r\n    async addressQuery(query, type) {\r\n      try {\r\n        await axios({\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n            Authorization:\r\n              \"Token \" + \"f135ebe81ca212b9d61fedadba1e0111159f0d6b\",\r\n          },\r\n          url: `https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/address`,\r\n          data:\r\n            type === \"USER_REGION\" || type === \"GAS_ADDRESS\"\r\n              ? JSON.stringify({\r\n                  query: query,\r\n                  locations_boost: [{ kladr_id: \"4100000100000\" }],\r\n                  count: 5,\r\n                })\r\n              : JSON.stringify({\r\n                  query: query,\r\n                  count: 5,\r\n                  restrict_value: false,\r\n                  locations: [\r\n                    {\r\n                      city: \"Якутск\",\r\n                    },\r\n                    {\r\n                      country: \"Узбекистан\",\r\n                    },\r\n                    {\r\n                      country: \"Таджикистан\",\r\n                    },\r\n                    {\r\n                      country: \"Киргизия\",\r\n                    },\r\n                    {\r\n                      country: \"Армения\",\r\n                    },\r\n                  ],\r\n                }),\r\n        }).then((response) => (this.addressResponse = response.data));\r\n      } catch (error) {\r\n        this.addressError = error;\r\n      }\r\n    },\r\n  },\r\n});\r\n","<template>\r\n  <div class=\"choose\" @click=\"btnSrc\">\r\n    <ion-text class=\"choose-text\">\r\n      {{ name }}\r\n      <ion-text class=\"dot\" v-if=\"required === true\">*</ion-text></ion-text\r\n    >\r\n    <ion-icon class=\"choose-icon\" :icon=\"caretDownSharp\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from \"vue\";\r\nimport { IonIcon, IonText } from \"@ionic/vue\";\r\nimport { caretDownSharp } from \"ionicons/icons\";\r\nimport { useRouter } from \"vue-router\";\r\n\r\nexport default defineComponent({\r\n  name: \"buttonSelect\",\r\n  props: {\r\n    name: String,\r\n    btnSrc: Function,\r\n    required: Boolean,\r\n  },\r\n  components: {\r\n    IonIcon,\r\n    IonText,\r\n  },\r\n  setup() {\r\n    const router = useRouter();\r\n\r\n    return {\r\n      router,\r\n      caretDownSharp,\r\n    };\r\n  },\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.choose {\r\n  border-radius: 8px;\r\n  width: 100%;\r\n  padding: 15px;\r\n  border: solid 1px #e0e0e0;\r\n  margin-bottom: 15px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n.choose-text {\r\n  color: #9e9e9e;\r\n  font-weight: 400;\r\n}\r\n\r\n.choose-icon {\r\n  display: flex;\r\n  color: #9e9e9e;\r\n  width: 15px;\r\n  height: 15px;\r\n  margin-left: auto;\r\n}\r\n\r\n.dot {\r\n  color: #62d0ce;\r\n}\r\n</style>","import { render } from \"./ButtonSelect.vue?vue&type=template&id=793185f2&scoped=true\"\nimport script from \"./ButtonSelect.vue?vue&type=script&lang=js\"\nexport * from \"./ButtonSelect.vue?vue&type=script&lang=js\"\n\nimport \"./ButtonSelect.vue?vue&type=style&index=0&id=793185f2&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\aia\\\\Desktop\\\\STNG-MOBILE\\\\mobile-project-ionic\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-793185f2\"]])\n\nexport default __exports__","<template>\r\n  <div :class=\"{ main: true, padding: padding, bgBlue: bgBlue }\" @click=\"onClick\">\r\n    <slot name=\"content\" />\r\n  </div>\r\n</template>\r\n<script>\r\nimport { defineComponent } from \"vue\";\r\nexport default defineComponent({\r\n  setup() { },\r\n  name: \"layoutBox\",\r\n  components: {},\r\n  props: {\r\n    padding: Boolean,\r\n    btnSrc: String,\r\n    filledButton: String,\r\n    title: String,\r\n    height: String,\r\n    onClick: Function,\r\n    bgBlue: Boolean,\r\n  },\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.bgBlue {\r\n  border: solid 1px #62d0ce;\r\n}\r\n\r\n.main {\r\n  background-color: rgb(255, 255, 255);\r\n  padding: 15px;\r\n  z-index: 2000px;\r\n  border-radius: 15px;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin-bottom: 20px;\r\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.padding {\r\n  padding: 0;\r\n  margin-bottom: 20px;\r\n}\r\n</style>\r\n","import { render } from \"./LayoutBox.vue?vue&type=template&id=7ef2f989&scoped=true\"\nimport script from \"./LayoutBox.vue?vue&type=script&lang=js\"\nexport * from \"./LayoutBox.vue?vue&type=script&lang=js\"\n\nimport \"./LayoutBox.vue?vue&type=style&index=0&id=7ef2f989&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\aia\\\\Desktop\\\\STNG-MOBILE\\\\mobile-project-ionic\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7ef2f989\"]])\n\nexport default __exports__","<template>\r\n  <ion-page>\r\n    <Back />\r\n    <!-- () => router.push({ name: 'servicesOneSelect', params: { next: true } }) -->\r\n    <Layout :method=\"storageHandler\" height=\"false\" filledBtn=\"Далее\" outlineBtn=\".\" title=\"Разовая услуга\">\r\n      <template v-slot:header-content>\r\n        <ion-text>\r\n          <p class=\"text-20-600\">Общие сведения для формы заявления</p>\r\n\r\n          <p class=\"text-white\">\r\n            <ion-text class=\"main-subtitle\"> Внимание! </ion-text>\r\n            Уважаемые Абоненты, воспользоваться данным сервисом могут только\r\n            Абоненты, заключившие договор на выполнение работ по техническому\r\n            обслуживанию и ремонту внутридомового газового оборудования с\r\n            Управлением газораспределительных сетей АО «Сахатранснефтегаз». Перед\r\n            подачей заявки, убедитесь в наличии договора для ввода номера в поле\r\n            Анкеты.\r\n          </p>\r\n        </ion-text>\r\n      </template>\r\n      <template v-slot:main-content>\r\n        <ion-text>\r\n          <p class=\"title ion-text-start\">Данные заявителя</p>\r\n          <p>\r\n            <ion-text class=\"dot\">*</ion-text> - обязательное поле для\r\n            заполнения.\r\n          </p>\r\n        </ion-text>\r\n\r\n        <div v-for=\"(el, index) in formUser\" :key=\"el\">\r\n          <ion-accordion-group ref=\"addressQuery\">\r\n            <ion-accordion>\r\n              <Input :mask=\"el.mask\" slot=\"header\" :value=\"el.value\" :name=\"el.name\" :required=\"el.required\" @input=\"\r\n                (e) => {\r\n                  el.value = e.target.value;\r\n                  addressQueryHandler(e, el.field);\r\n                }\r\n              \" />\r\n              <div slot=\"content\" v-show=\"el.field === 'USER_ADDRESS' && el.value\">\r\n                <div v-show=\"el.field === 'USER_ADDRESS' && el.value\" v-for=\"address in addressList\" :key=\"address\">\r\n                  <ion-item button @click=\"\r\n                    () => {\r\n                      this.$refs.addressQuery[index].$el.value = undefined;\r\n                      el.value = address.value;\r\n                    }\r\n                  \" :lines=\"\r\n  addressList[addressList.length - 1]?.value ===\r\n    address.value\r\n    ? 'none'\r\n    : 'full'\r\n\">\r\n                    <ion-text>{{ address.value }}</ion-text>\r\n                  </ion-item>\r\n                </div>\r\n                <ion-item lines=\"none\" v-show=\"addressList?.length === 0\">\r\n                  <ion-text>Не найдено</ion-text>\r\n                </ion-item>\r\n              </div>\r\n            </ion-accordion>\r\n          </ion-accordion-group>\r\n          <ion-text v-show=\"el.value.length === 0 && el.error\">\r\n            <p class=\"error\">Заполните поле</p>\r\n          </ion-text>\r\n        </div>\r\n      </template>\r\n      <template v-slot:content>\r\n        <LayoutBox>\r\n          <template v-slot:content>\r\n            <ion-text>\r\n              <p class=\"title ion-text-start\">Данные паспорта</p>\r\n              <p>\r\n                <ion-text class=\"dot\">*</ion-text> - обязательное поле для\r\n                заполнения.\r\n              </p>\r\n            </ion-text>\r\n            <div v-for=\"el in formPass\" :key=\"el\">\r\n              <Input :mask=\"el.mask\" :value=\"el.value\" :name=\"el.name\" :required=\"el.required\" @input=\"\r\n                (e) => {\r\n                  el.value = e.target.value;\r\n                }\r\n              \" />\r\n\r\n              <ion-text v-show=\"el.value.length === 0 && el.error\">\r\n                <p class=\"error\">Заполните поле</p>\r\n              </ion-text>\r\n            </div>\r\n          </template>\r\n        </LayoutBox>\r\n        <LayoutBox>\r\n          <template v-slot:content>\r\n            <ion-text>\r\n              <p class=\"title ion-text-start\">Данные об объекте газификации</p>\r\n              <p>\r\n                <ion-text class=\"dot\">*</ion-text> - обязательное поле для\r\n                заполнения.\r\n              </p>\r\n            </ion-text>\r\n            <div v-for=\"el in formGas\" :key=\"el\">\r\n              <Input :mask=\"el.mask\" :value=\"el.value\" :name=\"el.name\" :required=\"el.required\" @input=\"\r\n                (e) => {\r\n                  el.value = e.target.value;\r\n                }\r\n              \" />\r\n\r\n              <ion-text v-show=\"el.value.length === 0 && el.error\">\r\n                <p class=\"error\">Заполните поле</p>\r\n              </ion-text>\r\n            </div>\r\n\r\n            <ion-text>\r\n              <p class=\"sub-title\">Вид работ</p>\r\n            </ion-text>\r\n            <ButtonSelect :name=\"\r\n              this.select?.GAS_VID_USLUG?.VALUE\r\n                ? this.select?.GAS_VID_USLUG?.VALUE\r\n                : 'Выберите вариант'\r\n            \" :btnSrc=\"\r\n  () => {\r\n    router.push('/tabs/servicesOneSelect');\r\n  }\r\n\" />\r\n            <ion-text v-show=\"\r\n              validation.select === true && !this.select?.GAS_VID_USLUG?.VALUE\r\n            \">\r\n              <p class=\"error\">Выберите вариант</p>\r\n            </ion-text>\r\n            <ion-text>\r\n              <p class=\"sub-title\">\r\n                Лицевой счет (соответствует № договора поставки газа)\r\n              </p>\r\n            </ion-text>\r\n            <Input name=\"Лицевой счет\" :value=\"lc\" :changeHandler=\"changeLc\" />\r\n            <ion-text v-show=\"validation.lc === true && lc.length === 0\">\r\n              <p class=\"error\">Заполните поле</p>\r\n            </ion-text>\r\n            <ion-text>\r\n              <p class=\"sub-title\">\r\n                Номер договора на выполнение работ по техническому обслуживанию и\r\n                ремонту внутридомового и внутриквартирного газового оборудования\r\n                с УГРС АО Сахатранснефтегаз\r\n              </p>\r\n            </ion-text>\r\n            <Input name=\"Номер договора\" :value=\"number\" :changeHandler=\"changeNumber\" />\r\n            <ion-text v-show=\"validation.number === true && number.length === 0\">\r\n              <p class=\"error\">Заполните поле</p>\r\n            </ion-text>\r\n            <ion-text>\r\n              <p class=\"sub-title\">\r\n                Управляющая компания для многоквартирных домов\r\n              </p>\r\n            </ion-text>\r\n            <Input name=\"Управляющая компания\" :value=\"company\" :changeHandler=\"changeCompany\" />\r\n            <ion-text v-show=\"validation.company === true && company.length === 0\">\r\n              <p class=\"error\">Заполните поле</p>\r\n            </ion-text>\r\n          </template>\r\n        </LayoutBox>\r\n      </template>\r\n    </Layout>\r\n  </ion-page>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from \"vue\";\r\nimport { useRouter } from \"vue-router\";\r\nimport Layout from \"../components/Layout.vue\";\r\nimport {\r\n  IonPage,\r\n  IonText,\r\n  IonAccordion,\r\n  IonAccordionGroup,\r\n  IonItem,\r\n} from \"@ionic/vue\";\r\nimport Input from \"../components/Input.vue\";\r\nimport LayoutBox from \"../components/LayoutBox.vue\";\r\nimport Back from \"../components/Back.vue\";\r\nimport ButtonSelect from \"../components/ButtonSelect.vue\";\r\nimport moment from \"moment\";\r\nimport { mask } from \"vue-the-mask\";\r\nimport { mapActions } from \"pinia\";\r\nimport { useServicesStore } from \"../stores/services\";\r\nimport { useProfileStore } from \"../stores/profile\";\r\nimport { Storage } from \"@ionic/storage\";\r\n\r\nexport default defineComponent({\r\n  name: \"oneServicePage\",\r\n  components: {\r\n    IonPage,\r\n    ButtonSelect,\r\n    Layout,\r\n    IonText,\r\n    Input,\r\n    Back,\r\n    LayoutBox,\r\n    IonAccordion,\r\n    IonAccordionGroup,\r\n    IonItem,\r\n  },\r\n  directives: { mask },\r\n\r\n  setup() {\r\n    const router = useRouter();\r\n    return { router };\r\n  },\r\n  methods: {\r\n    ...mapActions(useProfileStore, [\"getProfile\"]),\r\n    ...mapActions(useServicesStore, [\"getForms\", \"addressQuery\"]),\r\n\r\n    addressQueryHandler(v, field) {\r\n      if (field === \"USER_BIRTHPLACE\") {\r\n        this.addressQuery(v.target.value, field);\r\n      }\r\n      if (field === \"USER_ADDRESS\") {\r\n        this.addressQuery(v.target.value, field);\r\n      }\r\n      if (field === \"USER_REGION\" || field === \"GAS_ADDRESS\") {\r\n        this.addressQuery(v.target.value, field);\r\n      }\r\n    },\r\n    async storageHandler() {\r\n      let checkUser = this.$data.formUser.filter((el) => {\r\n        if (el.required === true) {\r\n          el.error = true;\r\n          return el.value === \"\";\r\n        }\r\n      });\r\n      let checkPass = this.$data.formPass.filter((el) => {\r\n        if (el.required === true) {\r\n          el.error = true;\r\n          return el.value === \"\";\r\n        }\r\n      });\r\n      let checkGas = this.$data.formGas.filter((el) => {\r\n        if (el.required === true) {\r\n          el.error = true;\r\n          return el.value === \"\";\r\n        }\r\n      });\r\n      let checkRest = () => {\r\n        if (this.$data.lc.length === 0) {\r\n          this.$data.validation.lc = true;\r\n        } else {\r\n          this.$data.validation.lc = false;\r\n        }\r\n        if (this.$data.number.length === 0) {\r\n          this.$data.validation.number = true;\r\n        } else {\r\n          this.$data.validation.number = false;\r\n        }\r\n        if (this.$data.company.length === 0) {\r\n          this.$data.validation.company = true;\r\n        } else {\r\n          this.$data.validation.company = false;\r\n        }\r\n        if (this.select?.GAS_VID_USLUG?.VALUE === undefined) {\r\n          this.$data.validation.select = true;\r\n        } else {\r\n          this.$data.validation.select = false;\r\n        }\r\n      };\r\n      checkRest();\r\n\r\n      if (\r\n        checkUser.length === 0 &&\r\n        checkPass.length === 0 &&\r\n        checkGas.length === 0 &&\r\n        Object.keys(this.$data.validation).every(\r\n          (k) => !this.$data.validation[k]\r\n        )\r\n      ) {\r\n        let formPass = {};\r\n        let formGas = {};\r\n\r\n        for (let index = 0; index < this.$data.formPass.length; index++) {\r\n          const element = this.$data.formPass[index];\r\n          formPass[element.field] = {\r\n            NAME: element.name,\r\n            VALUE: element.value,\r\n          };\r\n        }\r\n        for (let index = 0; index < this.$data.formGas.length; index++) {\r\n          const element = this.$data.formGas[index];\r\n          formGas[element.field] = {\r\n            NAME: element.name,\r\n            VALUE: element.value,\r\n          };\r\n        }\r\n        let formUser = {\r\n          ...this.formFields[0],\r\n          ...formPass,\r\n          ...formGas,\r\n          // ...this.$pinia.state.value?.services?.form[0],\r\n        };\r\n        for (let index = 0; index < this.$data.formUser.length; index++) {\r\n          const element = this.$data.formUser[index];\r\n          formUser[element.field] = {\r\n            NAME: element.name,\r\n            VALUE: element.value,\r\n          };\r\n        }\r\n\r\n        let userObject = {\r\n          ...formUser,\r\n          NAME: {\r\n            NAME: \"Название\",\r\n            VALUE: `${formUser.USER_NAME.VALUE} ${formUser.USER_LAST_NAME.VALUE\r\n              }[${moment().format(\"DD.MM.YYYY hh:mm\")}]`,\r\n          },\r\n          DATE_CREATE: {\r\n            NAME: \"Дата создания\",\r\n            VALUE: `${moment().format(\"DD.MM.YYYY hh:mm:ss\")} `,\r\n          },\r\n          TIMESTAMP_X: {\r\n            NAME: \"Время последнего изменения\",\r\n            VALUE: `${moment().format(\"DD.MM.YYYY hh:mm:ss\")} `,\r\n          },\r\n          USER: { NAME: \"USER\", VALUE: \"\", VALUE_ID: 0 },\r\n          GAS_UPR_COMP: {\r\n            NAME: \"Управляющая компания (для многоквартирных домов)\",\r\n            VALUE: this.$data.company,\r\n          },\r\n          GAS_LC: {\r\n            NAME: \"Лицевой счет (соответствует № договора поставки газа)\",\r\n            VALUE: this.$data.lc,\r\n          },\r\n          GAS_NDOGOVORA_UGRS: {\r\n            NAME: \"Номер договора выполнение работ  по техническому о…азового оборудования  с УГРС АО Сахатранснефтегаз\",\r\n            VALUE: this.$data.number,\r\n          },\r\n          GAS_VID_USLUG: {\r\n            NAME: \"Вид работ\",\r\n            VALUE: this.select?.GAS_VID_USLUG?.VALUE,\r\n          },\r\n        };\r\n        console.log(userObject, \"test\");\r\n        if (this.$pinia.state.value?.services?.form) {\r\n          this.$pinia.state.value.services.servicesOneNext = true\r\n          this.$router.push({\r\n            name: \"servicesOneSelect\",\r\n            /*  params: { next: true }, */\r\n          });\r\n          this.$pinia.state.value.services.form = userObject;\r\n        }\r\n      }\r\n    },\r\n\r\n    changeCompany(e) {\r\n      this.$data.company = e.target.value;\r\n    },\r\n    changeLc(e) {\r\n      this.$data.lc = e.target.value;\r\n    },\r\n    changeNumber(e) {\r\n      this.$data.number = e.target.value;\r\n    },\r\n  },\r\n  mounted() {\r\n    this.getForms();\r\n    this.getProfile().then(async () => {\r\n      const store = new Storage()\r\n      await store.create()\r\n      const token = await store.get('token')\r\n      this.$data.formPass[0].value = this.profileDataComputed?.passport?.serial\r\n      this.$data.formPass[1].value = this.profileDataComputed?.passport?.number\r\n      this.$data.formPass[2].value = this.profileDataComputed?.passport?.issuedBy\r\n      this.$data.formPass[3].value = this.profileDataComputed?.passport?.issuedDate\r\n      this.$data.formUser[0].value = this.profileDataComputed?.name\r\n      this.$data.formUser[1].value = this.profileDataComputed?.surname\r\n      this.$data.formUser[2].value = this.profileDataComputed?.lastname\r\n      this.$data.formUser[4].value = JSON.parse(token).phone\r\n      this.$data.formUser[6].value = this.profileDataComputed?.email\r\n    })\r\n  },\r\n  computed: {\r\n    profileDataComputed() {\r\n      return this.$pinia.state.value?.profile?.profileResponse?.data;\r\n    },\r\n    addressList() {\r\n      return this.$pinia.state.value?.services?.addressResponse?.suggestions;\r\n    },\r\n    formFields() {\r\n      return this.$pinia.state.value?.services?.formResponse?.result?.forms.filter(\r\n        (el) => {\r\n          return (\r\n            el.SERVICE.VALUE ===\r\n            \"Разовые услуги для абонентов АО «Сахатранснефтегаз»\"\r\n          );\r\n        }\r\n      );\r\n    },\r\n    select() {\r\n      return this.$pinia.state.value?.services?.select;\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      validation: {\r\n        select: false,\r\n        lc: false,\r\n        number: false,\r\n        company: false,\r\n      },\r\n      lc: \"\",\r\n      number: \"\",\r\n      company: \"\",\r\n      formGas: [\r\n        {\r\n          field: \"GAS_NP\",\r\n          name: \"Населенный пункт\",\r\n          type: \"text\",\r\n          required: true,\r\n          value: \"\",\r\n        },\r\n        {\r\n          field: \"GAS_STREET\",\r\n          type: \"text\",\r\n          name: \"Улица\",\r\n          required: true,\r\n          value: \"\",\r\n        },\r\n        {\r\n          field: \"GAS_N_DOMA\",\r\n          name: \"№ дома \",\r\n          type: \"text\",\r\n          required: true,\r\n          value: \"\",\r\n        },\r\n        {\r\n          field: \"GAS_N_KORPUSA\",\r\n          name: \"№ корпуса\",\r\n          type: \"text\",\r\n          required: true,\r\n          value: \"\",\r\n        },\r\n        {\r\n          field: \"GAS_N_KV\",\r\n          name: \"№ квартиры\",\r\n          type: \"text\",\r\n          required: true,\r\n          value: \"\",\r\n        },\r\n      ],\r\n      formPass: [\r\n        {\r\n          field: \"USER_PASSPORT_SERIAL\",\r\n          name: \"Серия паспорта\",\r\n          mask: \"####\",\r\n\r\n          type: \"text\",\r\n          required: true,\r\n          value: \"\",\r\n        },\r\n        {\r\n          field: \"USER_PASSPORT_NUM\",\r\n          type: \"text\",\r\n          name: \"Номер паспорта\",\r\n          mask: \"######\",\r\n\r\n          required: true,\r\n          value: \"\",\r\n        },\r\n        {\r\n          field: \"USER_PASS_WHO\",\r\n\r\n          name: \"Кем выдан\",\r\n          type: \"text\",\r\n          required: true,\r\n          value: \"\",\r\n        },\r\n        {\r\n          field: \"USER_PASS_DATE\",\r\n          mask: \"##.##.####\",\r\n\r\n          name: \"Дата выдачи паспорта\",\r\n          type: \"text\",\r\n          required: true,\r\n          value: \"\",\r\n        },\r\n      ],\r\n      formUser: [\r\n        {\r\n          field: \"USER_NAME\",\r\n          name: \"Имя\",\r\n          type: \"text\",\r\n          required: true,\r\n          value: \"\",\r\n          mask: null,\r\n        },\r\n        {\r\n          field: \"USER_LAST_NAME\",\r\n          mask: null,\r\n\r\n          name: \"Фамилия\",\r\n          type: \"text\",\r\n          required: true,\r\n          value: \"\",\r\n        },\r\n        {\r\n          field: \"USER_SECOND_NAME\",\r\n          mask: null,\r\n\r\n          name: \"Отчество\",\r\n          type: \"text\",\r\n          required: true,\r\n          value: \"\",\r\n        },\r\n\r\n        {\r\n          field: \"USER_ADDRESS\",\r\n          mask: null,\r\n\r\n          name: \"Место жительства\",\r\n          type: \"text\",\r\n          required: true,\r\n          value: \"\",\r\n        },\r\n        {\r\n          field: \"USER_PHONE\",\r\n          mask: \"+7 (###) ###-##-##\",\r\n\r\n          name: \"Контактный телефон\",\r\n          type: \"text\",\r\n          required: true,\r\n          value: \"\",\r\n        },\r\n        {\r\n          field: \"USER_PHONE_2\",\r\n          mask: null,\r\n\r\n          name: \"Дополнительный контактный номер\",\r\n          type: \"text\",\r\n          required: false,\r\n          value: \"\",\r\n        },\r\n        {\r\n          field: \"USER_EMAIL\",\r\n          mask: null,\r\n\r\n          name: \"E-mail\",\r\n          type: \"email\",\r\n          required: true,\r\n          value: \"\",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.text-white {\r\n  color: #fff;\r\n}\r\n\r\nion-item {\r\n  --inner-padding-start: 15px;\r\n  --inner-padding-bottom: 0px;\r\n  --padding-bottom: 0px;\r\n}\r\n</style>\r\n","import { render } from \"./ServicesOne.vue?vue&type=template&id=341311ae&scoped=true\"\nimport script from \"./ServicesOne.vue?vue&type=script&lang=js\"\nexport * from \"./ServicesOne.vue?vue&type=script&lang=js\"\n\nimport \"./ServicesOne.vue?vue&type=style&index=0&id=341311ae&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\aia\\\\Desktop\\\\STNG-MOBILE\\\\mobile-project-ionic\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-341311ae\"]])\n\nexport default __exports__"],"names":["apiUrl","apiUrlStng2","useServicesStore","defineStore","id","state","formResponse","formResponseError","callInspectorResponse","callInspectorError","servicesResponse","servicesResponseError","form","select","GAS_SLUCHI","GAS_HARAKTER","GAS_VID_USLUG","servicesOneNext","techAllianceConnection","addressResponse","addressError","filesResponse","filesResponseError","listServicesResponse","listServicesResponseError","camerasResponse","camerasError","requestsInfo","getters","setForm","value","actions","async","axios","then","response","this","data","error","store","Storage","create","token","get","tokenParsed","JSON","parse","files","check","filter","el","file","index","length","element","title","push","field","text","forms","status","CODE","VALUE","lc","phone","LC","query","type","method","headers","Accept","Authorization","url","stringify","locations_boost","kladr_id","count","restrict_value","locations","city","country","_createElementBlock","class","onClick","_ctx","_createVNode","_component_ion_text","_createBlock","_component_ion_icon","icon","defineComponent","name","props","String","btnSrc","Function","required","Boolean","components","IonIcon","IonText","setup","router","useRouter","caretDownSharp","__exports__","render","main","padding","bgBlue","_renderSlot","filledButton","height","_createElementVNode","slot","_component_ion_page","_component_Back","_component_Layout","filledBtn","outlineBtn","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","key","_component_ion_accordion_group","ref","_component_ion_accordion","_component_Input","mask","onInput","e","target","_hoisted_4","address","_component_ion_item","button","$refs","addressQuery","$el","undefined","lines","_hoisted_5","content","_component_LayoutBox","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_component_ButtonSelect","_hoisted_11","_hoisted_12","changeHandler","_hoisted_13","_hoisted_14","_hoisted_15","number","_hoisted_16","_hoisted_17","company","IonPage","ButtonSelect","Layout","Input","Back","LayoutBox","IonAccordion","IonAccordionGroup","IonItem","directives","methods","mapActions","useProfileStore","addressQueryHandler","v","checkUser","$data","formUser","checkPass","formPass","checkGas","formGas","checkRest","validation","Object","keys","every","k","NAME","formFields","userObject","USER_NAME","USER_LAST_NAME","moment","format","DATE_CREATE","TIMESTAMP_X","USER","VALUE_ID","GAS_UPR_COMP","GAS_LC","GAS_NDOGOVORA_UGRS","console","log","$pinia","services","$router","changeCompany","changeLc","changeNumber","mounted","getForms","getProfile","profileDataComputed","passport","serial","issuedBy","issuedDate","surname","lastname","email","computed","profile","profileResponse","addressList","suggestions","result","SERVICE"],"sourceRoot":""}
{"version":3,"file":"js/4090.c0bae0b1.js","mappings":"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","sources":["webpack://test/./src/views/ServicesRequestGas.vue","webpack://test/./src/views/ServicesRequestGas.vue?df98"],"sourcesContent":["<template>\r\n  <ion-page>\r\n    <Back />\r\n    <Layout\r\n      height=\"false\"\r\n      :method=\"storageHandler\"\r\n      :filledBtn=\"'Далее'\"\r\n      outlineBtn=\".\"\r\n      title=\"Заявка на социальную газификацию\"\r\n      ><!--   :btnSrc=\"'/tabs/servicesRequestCalc'\" -->\r\n      <template v-slot:header-content>\r\n        <ion-text>\r\n          <p class=\"text-20-600\">Общие сведения заявления</p>\r\n        </ion-text>\r\n      </template>\r\n      <template v-slot:main-content>\r\n        <ion-text>\r\n          <p class=\"title ion-text-start\">Данные заявителя</p>\r\n\r\n          <p>\r\n            <ion-text class=\"dot\">*</ion-text> - обязательное поле для\r\n            заполнения.\r\n          </p>\r\n        </ion-text>\r\n\r\n        <div v-for=\"(el, index) in formUser\" :key=\"el\">\r\n          <ion-accordion-group ref=\"addressQuery\">\r\n            <ion-accordion value=\"first\" :toggle-icon=\"caretDownSharp\">\r\n              <Input\r\n                :mask=\"el.mask\"\r\n                slot=\"header\"\r\n                :value=\"el.value\"\r\n                :name=\"el.name\"\r\n                :required=\"el.required\"\r\n                @input=\"\r\n                  (e) => {\r\n                    el.value = e.target.value;\r\n                    addressQueryHandler(e, el.field);\r\n                  }\r\n                \"\r\n              />\r\n              <div\r\n                slot=\"content\"\r\n                v-show=\"\r\n                  el.field === 'USER_BIRTHPLACE' ||\r\n                  (el.field === 'USER_ADDRESS' && el.value)\r\n                \"\r\n              >\r\n                <div\r\n                  v-show=\"\r\n                    el.field === 'USER_BIRTHPLACE' ||\r\n                    ('USER_ADDRESS' && el.value)\r\n                  \"\r\n                  v-for=\"address in addressList\"\r\n                  :key=\"address\"\r\n                >\r\n                  <ion-item\r\n                    button\r\n                    @click=\"\r\n                      () => {\r\n                        this.$refs.addressQuery[index].$el.value = undefined;\r\n                        el.value = address.value;\r\n                      }\r\n                    \"\r\n                    :lines=\"\r\n                      addressList[addressList.length - 1]?.value ===\r\n                      address.value\r\n                        ? 'none'\r\n                        : 'full'\r\n                    \"\r\n                  >\r\n                    <ion-text>{{ address.value }}</ion-text>\r\n                  </ion-item>\r\n                </div>\r\n                <ion-item lines=\"none\" v-show=\"addressList?.length === 0\">\r\n                  <ion-text>Не найдено</ion-text>\r\n                </ion-item>\r\n              </div>\r\n            </ion-accordion>\r\n          </ion-accordion-group>\r\n          <ion-text v-show=\"el.value.length === 0 && el.error\">\r\n            <p class=\"error\">Заполните поле</p>\r\n          </ion-text>\r\n        </div>\r\n      </template>\r\n\r\n      <template v-slot:content>\r\n        <LayoutBox>\r\n          <template v-slot:content>\r\n            <ion-text>\r\n              <p class=\"title ion-text-start\">Данные паспорта</p>\r\n              <p>\r\n                <ion-text class=\"dot\">*</ion-text> - обязательное поле для\r\n                заполнения.\r\n              </p>\r\n            </ion-text>\r\n            <div v-for=\"(el, index) in formPass\" :key=\"el\">\r\n              <ion-accordion-group ref=\"addressQuery2\">\r\n                <ion-accordion value=\"first\">\r\n                  <Input\r\n                    :mask=\"el.mask\"\r\n                    slot=\"header\"\r\n                    :value=\"el.value\"\r\n                    :name=\"el.name\"\r\n                    :required=\"el.required\"\r\n                    @input=\"\r\n                      (e) => {\r\n                        el.value = e.target.value;\r\n                        addressQueryHandler(e, el.field);\r\n                      }\r\n                    \"\r\n                  />\r\n\r\n                  <div\r\n                    slot=\"content\"\r\n                    v-show=\"el.field === 'USER_REGION' && el.value\"\r\n                  >\r\n                    <div>\r\n                      <div v-for=\"address in addressList\" :key=\"address\">\r\n                        <ion-item\r\n                          button\r\n                          @click=\"\r\n                            () => {\r\n                              this.$refs.addressQuery2[index].$el.value =\r\n                                undefined;\r\n                              el.value = address.value;\r\n                            }\r\n                          \"\r\n                          :lines=\"\r\n                            addressList[addressList.length - 1]?.value ===\r\n                            address.value\r\n                              ? 'none'\r\n                              : 'full'\r\n                          \"\r\n                        >\r\n                          <ion-text>{{ address.value }}</ion-text>\r\n                        </ion-item>\r\n                      </div>\r\n                      <ion-item v-show=\"addressList?.length === 0\" lines=\"none\">\r\n                        Не найдено\r\n                      </ion-item>\r\n                    </div>\r\n                  </div>\r\n                </ion-accordion>\r\n              </ion-accordion-group>\r\n              <ion-text v-show=\"el.value.length === 0 && el.error\">\r\n                <p class=\"error\">Заполните поле</p>\r\n              </ion-text>\r\n            </div>\r\n          </template>\r\n        </LayoutBox>\r\n        <LayoutBox>\r\n          <template v-slot:content>\r\n            <ion-text>\r\n              <p class=\"title ion-text-start\">Данные об объекте газификации</p>\r\n              <p>\r\n                <ion-text class=\"dot\">*</ion-text> - обязательное поле для\r\n                заполнения.\r\n              </p>\r\n              <p class=\"sub-title\">\r\n                Адрес обьекта <ion-text class=\"dot\">*</ion-text>\r\n              </p>\r\n            </ion-text>\r\n\r\n            <ion-accordion-group ref=\"addressQuery3\">\r\n              <ion-accordion value=\"first\">\r\n                <Input\r\n                  slot=\"header\"\r\n                  :value=\"address\"\r\n                  name=\"Введите данные  \"\r\n                  @input=\"\r\n                    (e) => {\r\n                      changeAddress(e);\r\n                      addressQueryHandler(e, 'GAS_ADDRESS');\r\n                    }\r\n                  \"\r\n                /><!--  :changeHandler=\"changeAddress\" -->\r\n                <div slot=\"content\" v-show=\"address\">\r\n                  <div>\r\n                    <div v-for=\"addressItem in addressList\" :key=\"addressItem\">\r\n                      <ion-item\r\n                        button\r\n                        @click=\"\r\n                          () => {\r\n                            this.$refs.addressQuery3.$el.value = undefined;\r\n                            address = addressItem.value;\r\n                          }\r\n                        \"\r\n                        :lines=\"\r\n                          addressList[addressList.length - 1]?.value ===\r\n                          addressItem.value\r\n                            ? 'none'\r\n                            : 'full'\r\n                        \"\r\n                      >\r\n                        <ion-text>{{ addressItem.value }}</ion-text>\r\n                      </ion-item>\r\n                    </div>\r\n                    <ion-item v-show=\"addressList?.length === 0\" lines=\"none\">\r\n                      Не найдено\r\n                    </ion-item>\r\n                  </div>\r\n                </div>\r\n              </ion-accordion>\r\n            </ion-accordion-group>\r\n            <ion-text v-show=\"validation.address === true\">\r\n              <p class=\"error\">Заполните поле</p>\r\n            </ion-text>\r\n            <ion-text>\r\n              <p class=\"sub-title\">\r\n                Кадастровый номер земельного участка\r\n                <ion-text class=\"dot\">*</ion-text>\r\n              </p>\r\n            </ion-text>\r\n            <Input\r\n              :value=\"number\"\r\n              :changeHandler=\"changeNumber\"\r\n              name=\"Введите данные \"\r\n            />\r\n            <ion-text v-show=\"validation.number === true\">\r\n              <p class=\"error\">Заполните поле</p>\r\n            </ion-text>\r\n          </template>\r\n        </LayoutBox>\r\n      </template>\r\n    </Layout>\r\n  </ion-page>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from \"vue\";\r\nimport { useRouter } from \"vue-router\";\r\nimport Layout from \"../components/Layout.vue\";\r\nimport {\r\n  IonPage,\r\n  IonText,\r\n  IonAccordion,\r\n  IonAccordionGroup,\r\n  IonItem,\r\n} from \"@ionic/vue\";\r\nimport Back from \"../components/Back.vue\";\r\nimport { documentTextOutline, caretDownSharp } from \"ionicons/icons\";\r\nimport Input from \"../components/Input.vue\";\r\nimport LayoutBox from \"../components/LayoutBox.vue\";\r\nimport { mapActions } from \"pinia\";\r\n// import axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { Storage } from \"@ionic/storage\";\r\nimport { useServicesStore } from \"../stores/services\";\r\n\r\nexport default defineComponent({\r\n  name: \"servicesRequestGas\",\r\n  components: {\r\n    LayoutBox,\r\n    Input,\r\n    IonPage,\r\n    Layout,\r\n    IonText,\r\n    Back,\r\n    IonAccordion,\r\n    IonAccordionGroup,\r\n    IonItem,\r\n  },\r\n  methods: {\r\n    ...mapActions(useServicesStore, [\"getForms\", \"addressQuery\"]),\r\n    changeNumber(e) {\r\n      this.$data.number = e.target.value;\r\n    },\r\n    changeAddress(e) {\r\n      this.$data.address = e.target.value;\r\n    },\r\n    onFocusText(index) {\r\n      this.$refs.text[index].focus();\r\n    },\r\n\r\n    onFocusText2(index) {\r\n      this.$refs.text2[index].focus();\r\n    },\r\n    addressQueryHandler(v, field) {\r\n      if (field === \"USER_BIRTHPLACE\") {\r\n        this.addressQuery(v.target.value, field);\r\n      }\r\n      if (field === \"USER_ADDRESS\") {\r\n        this.addressQuery(v.target.value, field);\r\n      }\r\n      if (field === \"USER_REGION\" || field === \"GAS_ADDRESS\") {\r\n        this.addressQuery(v.target.value, field);\r\n      }\r\n    },\r\n    async storageHandler() {\r\n      const store = new Storage();\r\n      await store.create();\r\n      let formPass = {};\r\n      let checkUser = this.$data.formUser.filter((el) => {\r\n        if (el.required === true) {\r\n          el.error = true;\r\n          return el.value === \"\";\r\n        }\r\n      });\r\n      let checkPass = this.$data.formPass.filter((el) => {\r\n        if (el.required === true) {\r\n          el.error = true;\r\n          return el.value === \"\";\r\n        }\r\n      });\r\n\r\n      let checkRest = () => {\r\n        if (this.$data.address.length === 0) {\r\n          this.$data.validation.address = true;\r\n        } else {\r\n          this.$data.validation.address = false;\r\n        }\r\n        if (this.$data.number.length === 0) {\r\n          this.$data.validation.number = true;\r\n        } else {\r\n          this.$data.validation.number = false;\r\n        }\r\n      };\r\n      checkRest();\r\n\r\n      if (\r\n        checkUser.length === 0 &&\r\n        checkPass.length === 0 &&\r\n        Object.keys(this.$data.validation).every(\r\n          (k) => !this.$data.validation[k]\r\n        )\r\n      ) {\r\n        for (let index = 0; index < this.$data.formPass.length; index++) {\r\n          const element = this.$data.formPass[index];\r\n          formPass[element.field] = {\r\n            NAME: element.name,\r\n            VALUE: element.value,\r\n          };\r\n        }\r\n\r\n        let formUser = {\r\n          ...this.formFields[0],\r\n          ...formPass,\r\n          // ...this.$pinia.state.value?.services?.form[0],\r\n        };\r\n        for (let index = 0; index < this.$data.formUser.length; index++) {\r\n          const element = this.$data.formUser[index];\r\n          formUser[element.field] = {\r\n            NAME: element.name,\r\n            VALUE: element.value,\r\n          };\r\n        }\r\n\r\n        let userObject = {\r\n          ...formUser,\r\n          DATE_CREATE: {\r\n            NAME: \"Дата создания\",\r\n            VALUE: `${moment().format(\"DD.MM.YYYY hh:mm:ss\")} `,\r\n          },\r\n          TIMESTAMP_X: {\r\n            NAME: \"Время последнего изменения\",\r\n            VALUE: `${moment().format(\"DD.MM.YYYY hh:mm:ss\")} `,\r\n          },\r\n          NAME: {\r\n            NAME: \"Название\",\r\n            VALUE: `${moment().format(\"DD.MM.YYYY hh:mm\")} `,\r\n          },\r\n          USER: { NAME: \"USER\", VALUE: \"\", VALUE_ID: 0 },\r\n          GAS_ADDRESS: { NAME: \"Адрес объекта\", VALUE: this.$data.address },\r\n          GAS_KADASTR: {\r\n            NAME: \"Кадастровый номер земельного участка\",\r\n            VALUE: this.$data.number,\r\n          },\r\n        };\r\n        console.log(userObject, \"testuserObject\");\r\n        if (this.$pinia.state.value?.services?.form) {\r\n          this.$pinia.state.value.services.form = userObject;\r\n          await store.set(\"servicesTechAlliance\", JSON.stringify(userObject));\r\n        }\r\n        this.$router.push(\"/tabs/servicesRequestCalc\");\r\n      }\r\n    },\r\n  },\r\n  computed: {\r\n    formFields() {\r\n      return this.$pinia.state.value?.services?.formResponse?.result?.forms.filter(\r\n        (el) => {\r\n          return el.SERVICE.VALUE === \"Социальная газификация\";\r\n        }\r\n      );\r\n    },\r\n    addressList() {\r\n      return this.$pinia.state.value?.services?.addressResponse?.suggestions;\r\n    },\r\n  },\r\n  mounted() {\r\n    // this.addressQueryHandler()\r\n    this.getForms();\r\n    console.log(\r\n      this.formFields,\r\n\r\n      \"testtt222222\"\r\n    );\r\n  },\r\n\r\n  setup() {\r\n    const router = useRouter();\r\n    return { router, documentTextOutline, caretDownSharp };\r\n  },\r\n  data() {\r\n    return {\r\n      number: \"\",\r\n      address: \"\",\r\n      validation: {\r\n        address: false,\r\n        number: false,\r\n      },\r\n      formUser: [\r\n        {\r\n          field: \"USER_NAME\",\r\n          name: \"Имя\",\r\n          type: \"text\",\r\n          required: true,\r\n          value: \"\",\r\n          mask: null,\r\n        },\r\n        {\r\n          field: \"USER_LAST_NAME\",\r\n          mask: null,\r\n\r\n          name: \"Фамилия\",\r\n          type: \"text\",\r\n          required: true,\r\n          value: \"\",\r\n        },\r\n        {\r\n          field: \"USER_SECOND_NAME\",\r\n          mask: null,\r\n\r\n          name: \"Отчество\",\r\n          type: \"text\",\r\n          required: true,\r\n          value: \"\",\r\n        },\r\n        {\r\n          field: \"USER_BIRTHDATE\",\r\n          mask: \"##.##.####\",\r\n          name: \"Дата рождения\",\r\n          type: \"text\",\r\n          required: true,\r\n          value: \"\",\r\n        },\r\n        {\r\n          field: \"USER_SNILS\",\r\n          mask: \"###-###-### ##\",\r\n          name: \"СНИЛС\",\r\n          type: \"text\",\r\n          required: true,\r\n          value: \"\",\r\n        },\r\n        {\r\n          field: \"USER_INN\",\r\n          mask: \"############\",\r\n          name: \"ИНН\",\r\n          type: \"text\",\r\n          required: true,\r\n          value: \"\",\r\n        },\r\n        {\r\n          field: \"USER_BIRTHPLACE\",\r\n          mask: null,\r\n          name: \"Место рождения\",\r\n          type: \"text\",\r\n          required: true,\r\n          value: \"\",\r\n        },\r\n        {\r\n          field: \"USER_ADDRESS\",\r\n          mask: null,\r\n\r\n          name: \"Место жительства\",\r\n          type: \"text\",\r\n          required: true,\r\n          value: \"\",\r\n        },\r\n        {\r\n          field: \"USER_PHONE\",\r\n          mask: \"+7 (###) ###-##-##\",\r\n\r\n          name: \"Контактный телефон\",\r\n          type: \"text\",\r\n          required: true,\r\n          value: \"\",\r\n        },\r\n        {\r\n          field: \"USER_PHONE_2\",\r\n          mask: null,\r\n\r\n          name: \"Дополнительный контактный номер\",\r\n          type: \"text\",\r\n          required: false,\r\n          value: \"\",\r\n        },\r\n        {\r\n          field: \"USER_EMAIL\",\r\n          mask: null,\r\n\r\n          name: \"E-mail\",\r\n          type: \"text\",\r\n          required: true,\r\n          value: \"\",\r\n        },\r\n      ],\r\n      formPass: [\r\n        {\r\n          field: \"USER_PASSPORT_SERIAL\",\r\n          name: \"Серия паспорта\",\r\n          mask: \"####\",\r\n\r\n          type: \"text\",\r\n          required: true,\r\n          value: \"\",\r\n        },\r\n        {\r\n          field: \"USER_PASSPORT_NUM\",\r\n          type: \"text\",\r\n          name: \"Номер паспорта\",\r\n          mask: \"######\",\r\n\r\n          required: true,\r\n          value: \"\",\r\n        },\r\n        {\r\n          field: \"USER_PASS_WHO\",\r\n\r\n          name: \"Кем выдан\",\r\n          type: \"text\",\r\n          required: true,\r\n          value: \"\",\r\n        },\r\n        {\r\n          field: \"USER_PASS_DATE\",\r\n          mask: \"##.##.####\",\r\n\r\n          name: \"Дата выдачи паспорта\",\r\n          type: \"text\",\r\n          required: true,\r\n          value: \"\",\r\n        },\r\n        {\r\n          field: \"USER_REGION\",\r\n\r\n          name: \"Место регистрации\",\r\n          type: \"text\",\r\n          required: true,\r\n          value: \"\",\r\n        },\r\n      ],\r\n      forms: [],\r\n    };\r\n  },\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.sub-title {\r\n  margin-top: 0px;\r\n  margin-bottom: 10px;\r\n}\r\n.text {\r\n  margin-bottom: 10px;\r\n  margin-top: 0px;\r\n}\r\n\r\n.input {\r\n  border-radius: 8px;\r\n  padding: 15px;\r\n  width: 100%;\r\n  border: solid 1px #e0e0e0;\r\n  margin-bottom: 15px;\r\n  --padding-start: 15px;\r\n  --padding-bottom: 14px;\r\n  --padding-top: 14px;\r\n  --placeholder-color: #9e9e9e;\r\n  --placeholder-font-weight: 400;\r\n}\r\n\r\n.input:focus {\r\n  outline: none !important;\r\n  border: solid 1px #62d0ce;\r\n  caret-color: #000;\r\n}\r\n.input-wrapper {\r\n  position: relative;\r\n  width: 100%;\r\n}\r\n.input-text {\r\n  z-index: 0;\r\n  padding-left: 15px;\r\n  position: absolute;\r\n  left: 1px;\r\n  top: 15px;\r\n  width: 100%;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n}\r\n.inputTextBlue {\r\n  color: #0378b4;\r\n  font-weight: 700;\r\n}\r\n\r\ninput:not(:placeholder-shown) + ion-text {\r\n  display: none;\r\n}\r\n\r\n.dot {\r\n  color: #62d0ce;\r\n}\r\n\r\nion-item {\r\n  --inner-padding-start: 15px;\r\n  --inner-padding-bottom: 0px;\r\n  --padding-bottom: 0px;\r\n}\r\n</style>\r\n","import { render } from \"./ServicesRequestGas.vue?vue&type=template&id=64831335&scoped=true\"\nimport script from \"./ServicesRequestGas.vue?vue&type=script&lang=js\"\nexport * from \"./ServicesRequestGas.vue?vue&type=script&lang=js\"\n\nimport \"./ServicesRequestGas.vue?vue&type=style&index=0&id=64831335&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\User\\\\Downloads\\\\mobile-project-ionic\\\\mobile-project-ionic\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-64831335\"]])\n\nexport default __exports__"],"names":["_createElementVNode","class","slot","_createBlock","_component_ion_page","_createVNode","_component_Back","_component_Layout","height","method","_ctx","filledBtn","outlineBtn","title","_withCtx","_component_ion_text","_hoisted_1","_hoisted_2","_createElementBlock","_Fragment","_renderList","el","index","key","_component_ion_accordion_group","ref","_component_ion_accordion","value","_component_Input","mask","name","required","onInput","e","target","field","address","_component_ion_item","button","onClick","$refs","addressQuery","$el","undefined","lines","length","_hoisted_7","error","content","_component_LayoutBox","_hoisted_8","addressQuery2","_hoisted_13","_hoisted_14","addressItem","addressQuery3","_hoisted_22","changeHandler","_hoisted_26","number","defineComponent","components","LayoutBox","Input","IonPage","Layout","IonText","Back","IonAccordion","IonAccordionGroup","IonItem","methods","mapActions","useServicesStore","changeNumber","this","$data","changeAddress","onFocusText","text","focus","onFocusText2","text2","addressQueryHandler","v","async","store","Storage","create","formPass","checkUser","formUser","filter","checkPass","checkRest","validation","Object","keys","every","k","element","NAME","VALUE","formFields","userObject","DATE_CREATE","moment","format","TIMESTAMP_X","USER","VALUE_ID","GAS_ADDRESS","GAS_KADASTR","console","log","$pinia","state","services","form","set","JSON","stringify","$router","push","computed","formResponse","result","forms","SERVICE","addressList","addressResponse","suggestions","mounted","getForms","setup","router","useRouter","documentTextOutline","caretDownSharp","data","type","__exports__","render"],"sourceRoot":""}
{"version":3,"file":"js/4576.f58f0b86.js","mappings":"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","sources":["webpack://test/./src/stores/personalAccount.js","webpack://test/./src/views/PersonalAccountPaymentHistory.vue","webpack://test/./src/views/PersonalAccountPaymentHistory.vue?bd25"],"sourcesContent":["import { defineStore } from \"pinia\";\r\nimport axios from \"axios\";\r\nimport { Storage } from \"@ionic/storage\";\r\n// import { useLoginStore } from \"./login\";\r\n\r\nexport const usePersonalAccountStore = defineStore({\r\n  id: \"personalAccount\",\r\n  state: () => ({\r\n    addAccountResponse: null,\r\n    addAccountError: null,\r\n    getSettlementsResponse: null,\r\n    getSettlementsError: null,\r\n    getStreetsResponse: null,\r\n    getStreetsError: null,\r\n    getHousesResponse: null,\r\n    getHousesError: null,\r\n    getAccountResponse: null,\r\n    paymentHistoryResponse: null,\r\n    paymentHistoryError: null,\r\n    sberPayResponse: null,\r\n    sberPayError: null,\r\n    getAccountError: null,\r\n    delAccountResponse: { error: false, data: null },\r\n    delAccountError: null,\r\n    getIndicesResponse: null,\r\n    getIndicesError: null,\r\n    setIndicesResponse: null,\r\n    setIndicesError: null,\r\n    personalItemData: {},\r\n  }),\r\n  getters: {\r\n    getSettlementsList: (state) => {\r\n      return state.getSettlementsResponse.data.flatMap((el) =>\r\n        el?.settlements.flatMap((el) => el)\r\n      );\r\n    },\r\n  },\r\n  actions: {\r\n    async getSettlements() {\r\n      console.log(\"getting settlements\");\r\n      try {\r\n        const store = new Storage();\r\n        await store.create();\r\n        const token = await store.get(\"token\");\r\n        const tokenParsed = JSON.parse(token).token;\r\n        await axios\r\n          .post(\r\n            `https://fhd.aostng.ru/vesta_storage/hs/API_STNG/V2/GetSettlements`,\r\n            { token: tokenParsed }\r\n          )\r\n          .then((response) => (this.getSettlementsResponse = response.data));\r\n      } catch (error) {\r\n        this.getSettlementsError = error;\r\n      }\r\n    },\r\n    async getStreets(s_id) {\r\n      try {\r\n        const store = new Storage();\r\n        await store.create();\r\n        const token = await store.get(\"token\");\r\n        const tokenParsed = JSON.parse(token).token;\r\n        await axios\r\n          .post(\r\n            `https://fhd.aostng.ru/vesta_storage/hs/API_STNG/V2/GetStreets`,\r\n            { token: tokenParsed, s_id: s_id }\r\n          )\r\n          .then((response) => (this.getStreetsResponse = response.data));\r\n      } catch (error) {\r\n        this.getStreetsError = error;\r\n      }\r\n    },\r\n    async getHouses(ids) {\r\n      try {\r\n        const store = new Storage();\r\n        await store.create();\r\n        const token = await store.get(\"token\");\r\n        const tokenParsed = JSON.parse(token).token;\r\n        await axios\r\n          .post(\r\n            `https://fhd.aostng.ru/vesta_storage/hs/API_STNG/V2/GetHouses`,\r\n            { token: tokenParsed, ids: ids }\r\n          )\r\n          .then((response) => (this.getHousesResponse = response.data));\r\n      } catch (error) {\r\n        this.getHousesError = error;\r\n      }\r\n    },\r\n    async getAccount() {\r\n      try {\r\n        const store = new Storage();\r\n        await store.create();\r\n        const token = await store.get(\"token\");\r\n        const tokenParsed = JSON.parse(token).token;\r\n        const lc = JSON.parse(token).lics;\r\n        await axios\r\n          .post(\r\n            `https://fhd.aostng.ru/vesta_storage/hs/API_STNG/V2/GetAccount`,\r\n            { token: tokenParsed, LC: lc }\r\n          )\r\n          .then((response) => (this.getAccountResponse = response.data));\r\n      } catch (error) {\r\n        this.getAccountError = error;\r\n      }\r\n    },\r\n    async addAccount(token, lc) {\r\n      try {\r\n        await axios\r\n          .post(\r\n            `https://fhd.aostng.ru/vesta_storage/hs/API_STNG/V2/AddAccount`,\r\n            { token: token, LC: lc }\r\n          )\r\n          .then(async (response) => {\r\n            this.addAccountResponse = response.data;\r\n\r\n            // const counterStorage = useLoginStore();\r\n            const store = new Storage();\r\n            await store.create();\r\n            const token = await store.get(\"token\");\r\n            const tokenParsed = JSON.parse(token);\r\n            // console.log(response.data, tokenParsed, \"test addaccount\");\r\n            /* counterStorage\r\n                .authUser(tokenParsed.phone, tokenParsed.password)\r\n                .then(async () => {\r\n                  const store = new Storage();\r\n                  await store.create(); */\r\n            await store.set(\r\n              \"token\",\r\n              JSON.stringify({\r\n                ...tokenParsed,\r\n                lics: [...tokenParsed.lics, lc],\r\n              })\r\n            );\r\n            /*  }); */\r\n          });\r\n      } catch (error) {\r\n        this.addAccountError = error;\r\n      }\r\n    },\r\n    async delAccount(lc) {\r\n      try {\r\n        const store = new Storage();\r\n        await store.create();\r\n        const token = await store.get(\"token\");\r\n        const tokenParsed = JSON.parse(token).token;\r\n        await axios\r\n          .post(\r\n            `https://fhd.aostng.ru/vesta_storage/hs/API_STNG/V2/DelAccount`,\r\n            { token: tokenParsed, LC: lc }\r\n          )\r\n          .then(async (response) => {\r\n            this.getAccountResponse.data = this.getAccountResponse?.data.filter(\r\n              (el) => {\r\n                return el.code !== lc;\r\n              }\r\n            );\r\n            const userData = JSON.parse(token);\r\n            const lics = this.getAccountResponse?.data.filter((el) => {\r\n              return el?.code !== lc;\r\n            });\r\n            const userObject = {\r\n              name: userData.name,\r\n              phone: userData.phone,\r\n              email: userData.email,\r\n              password: userData.password,\r\n              token: userData.token,\r\n              lics: lics?.map((el) => el?.code),\r\n            };\r\n            await store.set(\"token\", JSON.stringify(userObject));\r\n            this.delAccountResponse = response.data;\r\n          });\r\n      } catch (error) {\r\n        this.delAccountError = error;\r\n      }\r\n    },\r\n    async getPayments(lc, beginDate, endDate) {\r\n      try {\r\n        const store = new Storage();\r\n        await store.create();\r\n        const token = await store.get(\"token\");\r\n        const tokenParsed = JSON.parse(token).token;\r\n        await axios\r\n          .post(\r\n            `https://fhd.aostng.ru/vesta_storage/hs/API_STNG/V2/GetPayments`,\r\n            {\r\n              token: tokenParsed,\r\n              LC: lc, beginDate: beginDate, endDate: endDate,\r\n            }\r\n          )\r\n          .then(async (response) => {\r\n            this.paymentHistoryResponse = response.data;\r\n          });\r\n      } catch (error) {\r\n        this.paymentHistoryError = error;\r\n      }\r\n    },\r\n    async getIndices(counterId, beginDate, endDate) {\r\n      try {\r\n        const store = new Storage();\r\n        await store.create();\r\n        const token = await store.get(\"token\");\r\n        const tokenParsed = JSON.parse(token).token;\r\n        await axios\r\n          .post(\r\n            `https://fhd.aostng.ru/vesta_storage/hs/API_STNG/V2/GetIndices`,\r\n            { token: tokenParsed, counterId: counterId, beginDate: beginDate, endDate: endDate, }\r\n          )\r\n          .then((response) => {\r\n            this.getIndicesResponse = response.data;\r\n          });\r\n      } catch (error) {\r\n        this.getIndicesError = error;\r\n      }\r\n    },\r\n    async setIndices(counterId, indice) {\r\n      try {\r\n        const store = new Storage();\r\n        await store.create();\r\n        const token = await store.get(\"token\");\r\n        const tokenParsed = JSON.parse(token).token;\r\n        await axios\r\n          .post(\r\n            `https://fhd.aostng.ru/vesta_storage/hs/API_STNG/V2/SetIndices`,\r\n            { token: tokenParsed, counterId: counterId, indice: indice }\r\n          )\r\n          .then((response) => {\r\n            /* const counterStorage = usePersonalAccountStore()\r\n            counterStorage.getIndices(counterId) */\r\n            if (response.data.error === false) {\r\n              this.getIndices(counterId);\r\n              this.setIndicesResponse = response.data;\r\n            }\r\n          });\r\n      } catch (error) {\r\n        this.setIndicesError = error;\r\n      }\r\n    },\r\n    async sberPay(lc, phone, email, accruals, sumTO, penalties, advances) {\r\n      try {\r\n        const store = new Storage();\r\n        await store.create();\r\n        const token = await store.get(\"token\");\r\n        const tokenParsed = JSON.parse(token);\r\n        await axios\r\n          .post(`https://fhd.aostng.ru/vesta_storage/hs/API_STNG/V2/SberPay`, {\r\n            token: tokenParsed.token,\r\n            phone: phone,\r\n            email: email,\r\n            LC: lc,\r\n            accruals: accruals,\r\n            penalties: penalties,\r\n            advances: advances,\r\n            sumTO: sumTO,\r\n          })\r\n          .then((response) => {\r\n            /* const counterStorage = usePersonalAccountStore()\r\n            counterStorage.getIndices(counterId) */\r\n            this.sberPayResponse = response.data;\r\n          });\r\n      } catch (error) {\r\n        this.sberPayError = error;\r\n      }\r\n    },\r\n  },\r\n});\r\n","<template>\r\n  <ion-page>\r\n    <Back />\r\n    <Layout :btnSrc=\"'/personalAccountPayment'\" height=\"false\" outlineBtn=\".\" filledBtn=\".\" title=\"Лицевые счета\">\r\n      <template v-slot:header-content>\r\n        <ion-text class=\"main-title\">История платежей</ion-text>\r\n      </template>\r\n      <template v-slot:main-content>\r\n        <div v-show=\"this.$pinia.state.value?.personalAccount?.paymentHistoryResponse\r\n        ?.data?.length === 0 && !loading\">\r\n          <ion-text>У №{{ this.$pinia.state.value?.personalAccount?.personalItemData?.code }} лицевого счета нет\r\n            платежей</ion-text>\r\n        </div>\r\n        <div v-show=\"loading\">\r\n          <ion-item lines=\"none\">\r\n            <ion-spinner name=\"bubbles\" />\r\n          </ion-item>\r\n        </div>\r\n        <div v-show=\"this.$pinia.state.value?.personalAccount?.paymentHistoryResponse\r\n        ?.data[0]?.payments?.length > 0 && !loading\">\r\n          <ion-grid>\r\n            <ion-row class=\"ion-row-last\">\r\n\r\n              <ion-text style=\"margin: 0 10px 0 0\">\r\n                Выберите период:\r\n              </ion-text>\r\n              <div style=\"display: flex;\">\r\n                <ion-datetime-button color=\"date\" datetime=\"date\"></ion-datetime-button>\r\n                <ion-text style=\"margin: 0 5px;\">-</ion-text>\r\n\r\n                <ion-datetime-button color=\"date\" datetime=\"date2\"></ion-datetime-button>\r\n              </div>\r\n\r\n              <ion-modal mode=\"ios\" :keep-contents-mounted=\"true\">\r\n                <ion-datetime @ionChange=\"(e)=>onBeginDateChange(e)\" color=\"date\" presentation=\"date\" mode=\"ios\"\r\n                  id=\"date\">\r\n                </ion-datetime>\r\n\r\n              </ion-modal>\r\n              <ion-modal mode=\"ios\" :keep-contents-mounted=\"true\">\r\n\r\n                <ion-datetime @ionChange=\"(e)=>onEndDateChange(e)\" color=\"date\" presentation=\"date\" mode=\"ios\"\r\n                  id=\"date2\">\r\n                </ion-datetime>\r\n              </ion-modal>\r\n            </ion-row>\r\n\r\n          </ion-grid>\r\n          <ion-row>\r\n            <ion-col>Чеки</ion-col>\r\n            <ion-col>Дата</ion-col>\r\n\r\n            <ion-col>Сумма</ion-col>\r\n\r\n            <!-- <ion-col>Автор</ion-col> -->\r\n          </ion-row>\r\n\r\n          <div v-show=\"!loading\" v-for=\"el in paymentHistory\" :key=\"el\">\r\n            <ion-row :class=\"{\r\n              'ion-row-last':\r\n                paymentHistory[paymentHistory?.length - 1]?.number ===\r\n                el?.number,\r\n            }\">\r\n              <ion-col class=\"sub-title\"> {{ el?.number }} </ion-col>\r\n              <ion-col class=\"sub-title\">\r\n                {{ el?.date ? el?.date : \"-\" }}\r\n              </ion-col>\r\n\r\n              <ion-col class=\"sub-title\">{{ maskMoney(el?.summ) }}</ion-col>\r\n              <!--  <ion-col class=\"sub-title\">{{ el?.author }}</ion-col> -->\r\n            </ion-row>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </template>\r\n    </Layout>\r\n  </ion-page>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from \"vue\";\r\nimport { useRouter, useRoute } from \"vue-router\";\r\nimport Layout from \"../components/Layout.vue\";\r\nimport {\r\n  IonPage,\r\n  IonText,\r\n  IonSpinner,\r\n  IonCol,\r\n  IonRow,\r\n  IonModal,\r\n  IonDatetime,\r\n  IonDatetimeButton,\r\n  IonGrid,\r\n  IonItem,\r\n} from \"@ionic/vue\";\r\nimport {\r\n  pencilOutline,\r\n  documentTextOutline,\r\n  chevronForwardOutline,\r\n} from \"ionicons/icons\";\r\nimport Back from \"../components/Back.vue\";\r\n// import LayoutBox from \"../components/LayoutBox.vue\";\r\nimport { mapActions } from \"pinia\";\r\nimport { usePersonalAccountStore } from \"../stores/personalAccount\";\r\nimport moment from \"moment\";\r\n\r\nexport default defineComponent({\r\n  name: \"personalAccountPaymentHistory\",\r\n  components: {\r\n    Back,\r\n    IonPage,\r\n    Layout,\r\n    IonText,\r\n    // LayoutBox,\r\n    IonModal,\r\n    IonDatetime,\r\n    IonDatetimeButton,\r\n    IonSpinner,\r\n    IonCol,\r\n    IonGrid,\r\n    IonItem,\r\n    IonRow,\r\n  },\r\n  methods: {\r\n    ...mapActions(usePersonalAccountStore, [\"getPayments\"]),\r\n    maskMoney(value) {\r\n      const valueAsNumber = value.toString().replace('.', '')\r\n      if (value?.toString().includes('.')) {\r\n        return new Intl.NumberFormat(\"ru-RU\", {\r\n          style: \"currency\",\r\n          currency: \"RUB\",\r\n        }).format(valueAsNumber / 100);\r\n      } else {\r\n        return new Intl.NumberFormat(\"ru-RU\", {\r\n          style: \"currency\",\r\n          currency: \"RUB\",\r\n        }).format(valueAsNumber);\r\n      }\r\n\r\n    },\r\n    onBeginDateChange(event) {\r\n      this.getPayments(this.$pinia.state.value?.personalAccount?.personalItemData?.code, moment(event.detail.value).format('yyyyMMDD'), this.$data.endDate)\r\n      this.$data.beginDate = moment(event.detail.value).format('yyyyMMDD')\r\n    },\r\n    onEndDateChange(event) {\r\n      this.getPayments(this.$pinia.state.value?.personalAccount?.personalItemData?.code, this.$data.beginDate, moment(event.detail.value).format('yyyyMMDD'))\r\n\r\n      this.$data.endDate = moment(event.detail.value).format('yyyyMMDD')\r\n    },\r\n  },\r\n  computed: {\r\n    paymentHistory() {\r\n      return this.$pinia.state.value?.personalAccount?.paymentHistoryResponse\r\n        ?.data[0]?.payments\r\n        ? this.$pinia.state.value?.personalAccount?.paymentHistoryResponse\r\n          ?.data[0]?.payments\r\n        : [];\r\n    },\r\n    paymentHistory2() {\r\n      return [...this.paymentHistory.slice(1)];\r\n    },\r\n  },\r\n  mounted() {\r\n    this.$data.loading = true\r\n    this.getPayments(\r\n      this.$pinia.state.value?.personalAccount?.personalItemData?.code\r\n    ).then(() => {\r\n      this.$data.loading = false\r\n    })\r\n  },\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      beginDate: '',\r\n      endDate: '',\r\n    };\r\n  },\r\n  setup() {\r\n    const router = useRouter();\r\n    const route = useRoute();\r\n    return {\r\n      route,\r\n      router,\r\n      pencilOutline,\r\n      documentTextOutline,\r\n      chevronForwardOutline,\r\n    };\r\n  },\r\n});\r\n</script>\r\n\r\n<style scoped>\r\nion-row {\r\n  padding-top: 5px;\r\n  padding-bottom: 5px;\r\n  border-bottom: solid 1px #e0e0e0;\r\n}\r\n\r\n.ion-row-last {\r\n  border-bottom: none;\r\n}\r\n\r\nion-col {\r\n  word-break: break-all;\r\n}\r\n\r\nion-list {\r\n  /* background: #f5f5f5; */\r\n  background-color: rgba(0, 0, 0, 0);\r\n}\r\n\r\n.text {\r\n  margin-top: 15px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.period {\r\n  @media screen and (max-width:300px) {\r\n    display: none;\r\n  }\r\n}\r\n\r\n.sub-title {\r\n  margin: 0;\r\n  /* background: red; */\r\n}\r\n\r\nion-spinner {\r\n  margin: 0;\r\n}\r\n</style>\r\n","import { render } from \"./PersonalAccountPaymentHistory.vue?vue&type=template&id=2704ebe3&scoped=true\"\nimport script from \"./PersonalAccountPaymentHistory.vue?vue&type=script&lang=js\"\nexport * from \"./PersonalAccountPaymentHistory.vue?vue&type=script&lang=js\"\n\nimport \"./PersonalAccountPaymentHistory.vue?vue&type=style&index=0&id=2704ebe3&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\User\\\\Downloads\\\\mobile-project-ionic\\\\mobile-project-ionic\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2704ebe3\"]])\n\nexport default __exports__"],"names":["usePersonalAccountStore","defineStore","id","state","addAccountResponse","addAccountError","getSettlementsResponse","getSettlementsError","getStreetsResponse","getStreetsError","getHousesResponse","getHousesError","getAccountResponse","paymentHistoryResponse","paymentHistoryError","sberPayResponse","sberPayError","getAccountError","delAccountResponse","error","data","delAccountError","getIndicesResponse","getIndicesError","setIndicesResponse","setIndicesError","personalItemData","getters","getSettlementsList","flatMap","el","settlements","actions","async","console","log","store","Storage","create","token","get","tokenParsed","JSON","parse","axios","then","response","this","s_id","ids","lc","lics","LC","set","stringify","filter","code","userData","userObject","name","phone","email","password","map","beginDate","endDate","counterId","indice","getIndices","accruals","sumTO","penalties","advances","style","_createBlock","_component_ion_page","_createVNode","_component_Back","_component_Layout","btnSrc","height","outlineBtn","filledBtn","title","_withCtx","_component_ion_text","class","_createElementVNode","_toDisplayString","$pinia","value","personalAccount","length","_ctx","_component_ion_item","lines","_component_ion_spinner","_component_ion_grid","_component_ion_row","_component_ion_datetime_button","color","datetime","_component_ion_modal","mode","_component_ion_datetime","onIonChange","e","presentation","_component_ion_col","_createElementBlock","_Fragment","_renderList","key","number","date","summ","payments","defineComponent","components","Back","IonPage","Layout","IonText","IonModal","IonDatetime","IonDatetimeButton","IonSpinner","IonCol","IonGrid","IonItem","IonRow","methods","mapActions","maskMoney","valueAsNumber","toString","replace","includes","Intl","NumberFormat","currency","format","onBeginDateChange","event","getPayments","moment","detail","$data","onEndDateChange","computed","paymentHistory","paymentHistory2","slice","mounted","loading","setup","router","useRouter","route","useRoute","pencilOutline","documentTextOutline","chevronForwardOutline","__exports__","render"],"sourceRoot":""}
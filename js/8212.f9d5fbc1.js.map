{"version":3,"file":"js/8212.f9d5fbc1.js","mappings":"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","sources":["webpack://stng/./src/stores/services.js","webpack://stng/./src/components/LayoutBox.vue","webpack://stng/./src/components/LayoutBox.vue?f0f9","webpack://stng/./src/views/ServicesRequestGas.vue","webpack://stng/./src/views/ServicesRequestGas.vue?df98"],"sourcesContent":["import { defineStore } from \"pinia\";\r\nimport axios from \"axios\";\r\nimport { Storage } from \"@ionic/storage\";\r\nconst apiUrl = \"https://api.aostng.ru/api/v2\";\r\n// let apiUrlStng = '${apiUrlStng2}'\r\nlet apiUrlStng2 = 'https://fhd.aostng.ru/vesta/hs/API_STNG/V2/'\r\n\r\nexport const useServicesStore = defineStore({\r\n  id: \"services\",\r\n  state: () => ({\r\n    formResponse: null,\r\n    formResponseError: null,\r\n    callInspectorResponse: null,\r\n    callInspectorError: null,\r\n    servicesResponse: null,\r\n    servicesResponseError: null,\r\n    form: {},\r\n    select: {\r\n      GAS_SLUCHI: null,\r\n      GAS_HARAKTER: null,\r\n      GAS_VID_USLUG: null,\r\n    },\r\n    servicesOneNext: false,\r\n    techAllianceConnection: false,\r\n    addressResponse: null,\r\n    addressError: null,\r\n    filesResponse: [],\r\n    filesResponseError: null,\r\n    listServicesResponse: null,\r\n    listServicesResponseError: null,\r\n    camerasResponse: null,\r\n    camerasError: null,\r\n    requestsInfo: null,\r\n    \r\n  }),\r\n  getters: {\r\n    setForm: (state) => {\r\n      return (value) => [...state.form, ...value];\r\n    },\r\n  },\r\n  actions: {\r\n    async getCameras() {\r\n      try {\r\n        await axios\r\n          .get(`${apiUrl}/camera/get`)\r\n          .then((response) => (this.camerasResponse = response.data));\r\n      } catch (error) {\r\n        this.camerasError = error;\r\n      }\r\n    },\r\n    async getListServices() {\r\n      const store = new Storage();\r\n      await store.create();\r\n      const token = await store.get(\"token\");\r\n      const tokenParsed = JSON.parse(token).token;\r\n      try {\r\n        await axios\r\n          .post(\r\n            `${apiUrlStng2}ListServices`,\r\n            {\r\n              token: tokenParsed,\r\n            }\r\n          )\r\n          .then((response) => (this.listServicesResponse = response.data));\r\n      } catch (error) {\r\n        this.listServicesResponseError = error;\r\n      }\r\n    },\r\n    async getForms() {\r\n      try {\r\n        await axios\r\n          .get(\r\n            `https://aostng.ru/api/?action=getAll&format=json&page=3&limit=20`\r\n          )\r\n          .then((response) => (this.formResponse = response.data));\r\n      } catch (error) {\r\n        this.formResponseError = error;\r\n      }\r\n    },\r\n    async uploadFiles(files) {\r\n      const store = new Storage();\r\n      await store.create();\r\n      const token = await store.get(\"token\");\r\n      const tokenParsed = JSON.parse(token).token;\r\n      try {\r\n        let check = files.filter((el) => {\r\n          if (el.file !== false) {\r\n            return el;\r\n          }\r\n        });\r\n        for (let index = 0; index < check.length; index++) {\r\n          const element = check[index];\r\n          await axios\r\n            .post(\r\n              `${apiUrlStng2}get_file`,\r\n              {\r\n                token: tokenParsed,\r\n                title: element.title,\r\n                file: element.file,\r\n              }\r\n            )\r\n            .then((response) =>\r\n              this.filesResponse.push({\r\n                ...response.data,\r\n                field: element.field,\r\n                text: element.text,\r\n              })\r\n            );\r\n        }\r\n      } catch (error) {\r\n        this.filesResponseError = error;\r\n      }\r\n    },\r\n    async services(forms) {\r\n      const store = new Storage();\r\n      await store.create();\r\n      const token = await store.get(\"token\");\r\n      const tokenParsed = JSON.parse(token).token;\r\n      try {\r\n        await axios\r\n          .post(`${apiUrlStng2}Services`, {\r\n            token: tokenParsed,\r\n            data: {\r\n              status: [\r\n                {\r\n                  CODE: \"120\",\r\n                  VALUE: \"Принят\",\r\n                },\r\n                {\r\n                  CODE: \"23\",\r\n                  VALUE: \"В обработке\",\r\n                },\r\n                {\r\n                  CODE: \"26\",\r\n                  VALUE: \"Выполнено\",\r\n                },\r\n                {\r\n                  CODE: \"24\",\r\n                  VALUE: \"Требуется документ\",\r\n                },\r\n                {\r\n                  CODE: \"25\",\r\n                  VALUE: \"Требует оплаты\",\r\n                },\r\n                {\r\n                  CODE: \"22\",\r\n                  VALUE: \"Отклонен\",\r\n                },\r\n              ],\r\n              forms: forms,\r\n            },\r\n          })\r\n          .then((response) => (this.servicesResponse = response.data));\r\n      } catch (error) {\r\n        this.servicesResponseError = error;\r\n      }\r\n    },\r\n    async callInspector(lc, phone) {\r\n      try {\r\n        const store = new Storage();\r\n        await store.create();\r\n        const token = await store.get(\"token\");\r\n        const tokenParsed = JSON.parse(token).token;\r\n        await axios\r\n          .post(\r\n            `${apiUrlStng2}CallInspector`,\r\n            { token: tokenParsed, LC: lc, phone: phone }\r\n          )\r\n          .then((response) => (this.callInspectorResponse = response.data));\r\n      } catch (error) {\r\n        this.callInspectorError = error;\r\n      }\r\n    },\r\n    async addressQuery(query, type) {\r\n      try {\r\n        await axios({\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n            Authorization:\r\n              \"Token \" + \"f135ebe81ca212b9d61fedadba1e0111159f0d6b\",\r\n          },\r\n          url: `https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/address`,\r\n          data:\r\n            type === \"USER_REGION\" || type === \"GAS_ADDRESS\"\r\n              ? JSON.stringify({\r\n                  query: query,\r\n                  locations_boost: [{ kladr_id: \"4100000100000\" }],\r\n                  count: 5,\r\n                })\r\n              : JSON.stringify({\r\n                  query: query,\r\n                  count: 5,\r\n                  restrict_value: false,\r\n                  locations: [\r\n                    {\r\n                      city: \"Якутск\",\r\n                    },\r\n                    {\r\n                      country: \"Узбекистан\",\r\n                    },\r\n                    {\r\n                      country: \"Таджикистан\",\r\n                    },\r\n                    {\r\n                      country: \"Киргизия\",\r\n                    },\r\n                    {\r\n                      country: \"Армения\",\r\n                    },\r\n                  ],\r\n                }),\r\n        }).then((response) => (this.addressResponse = response.data));\r\n      } catch (error) {\r\n        this.addressError = error;\r\n      }\r\n    },\r\n  },\r\n});\r\n","<template>\r\n  <div class=\"main\" v-bind:class=\"{ padding: padding }\" @click=\"onClick\">\r\n    <slot name=\"content\" />\r\n  </div>\r\n</template>\r\n<script>\r\nimport { defineComponent } from \"vue\";\r\nexport default defineComponent({\r\n  setup() {},\r\n  name: \"layoutBox\",\r\n  components: {},\r\n  props: {\r\n    padding: Boolean,\r\n    btnSrc: String,\r\n    filledButton: String,\r\n    title: String,\r\n    height: String,\r\n    onClick: Function,\r\n  },\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.main {\r\n  background: rgb(255, 255, 255);\r\n  padding: 15px;\r\n  z-index: 2000px;\r\n  border-radius: 15px;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin-bottom: 20px;\r\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.padding {\r\n  padding: 0;\r\n  margin-bottom: 20px;\r\n}\r\n</style>\r\n","import { render } from \"./LayoutBox.vue?vue&type=template&id=568da44e&scoped=true\"\nimport script from \"./LayoutBox.vue?vue&type=script&lang=js\"\nexport * from \"./LayoutBox.vue?vue&type=script&lang=js\"\n\nimport \"./LayoutBox.vue?vue&type=style&index=0&id=568da44e&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\aia\\\\Desktop\\\\STNG-MOBILE\\\\mobile-project-ionic\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-568da44e\"]])\n\nexport default __exports__","<template>\r\n  <ion-page>\r\n    <Back />\r\n    <Layout\r\n      height=\"false\"\r\n      :method=\"storageHandler\"\r\n      :filledBtn=\"'Далее'\"\r\n      outlineBtn=\".\"\r\n      title=\"Заявка на социальную газификацию\"\r\n      ><!--   :btnSrc=\"'/tabs/servicesRequestCalc'\" -->\r\n      <template v-slot:header-content>\r\n        <ion-text>\r\n          <p class=\"text-20-600\">Общие сведения заявления</p>\r\n        </ion-text>\r\n      </template>\r\n      <template v-slot:main-content>\r\n        <ion-text>\r\n          <p class=\"title ion-text-start\">Данные заявителя</p>\r\n\r\n          <p>\r\n            <ion-text class=\"dot\">*</ion-text> - обязательное поле для\r\n            заполнения.\r\n          </p>\r\n        </ion-text>\r\n\r\n        <div v-for=\"(el, index) in formUser\" :key=\"el\">\r\n          <ion-accordion-group ref=\"addressQuery\">\r\n            <ion-accordion value=\"first\" :toggle-icon=\"caretDownSharp\">\r\n              <Input\r\n                :mask=\"el.mask\"\r\n                slot=\"header\"\r\n                :value=\"el.value\"\r\n                :name=\"el.name\"\r\n                :required=\"el.required\"\r\n                @input=\"\r\n                  (e) => {\r\n                    el.value = e.target.value;\r\n                    addressQueryHandler(e, el.field);\r\n                  }\r\n                \"\r\n              />\r\n              <div\r\n                slot=\"content\"\r\n                v-show=\"\r\n                  el.field === 'USER_BIRTHPLACE' ||\r\n                  (el.field === 'USER_ADDRESS' && el.value)\r\n                \"\r\n              >\r\n                <div\r\n                  v-show=\"\r\n                    el.field === 'USER_BIRTHPLACE' ||\r\n                    ('USER_ADDRESS' && el.value)\r\n                  \"\r\n                  v-for=\"address in addressList\"\r\n                  :key=\"address\"\r\n                >\r\n                  <ion-item\r\n                    button\r\n                    @click=\"\r\n                      () => {\r\n                        this.$refs.addressQuery[index].$el.value = undefined;\r\n                        el.value = address.value;\r\n                      }\r\n                    \"\r\n                    :lines=\"\r\n                      addressList[addressList.length - 1]?.value ===\r\n                      address.value\r\n                        ? 'none'\r\n                        : 'full'\r\n                    \"\r\n                  >\r\n                    <ion-text>{{ address.value }}</ion-text>\r\n                  </ion-item>\r\n                </div>\r\n                <ion-item lines=\"none\" v-show=\"addressList?.length === 0\">\r\n                  <ion-text>Не найдено</ion-text>\r\n                </ion-item>\r\n              </div>\r\n            </ion-accordion>\r\n          </ion-accordion-group>\r\n          <ion-text v-show=\"el.value.length === 0 && el.error\">\r\n            <p class=\"error\">Заполните поле</p>\r\n          </ion-text>\r\n        </div>\r\n      </template>\r\n\r\n      <template v-slot:content>\r\n        <LayoutBox>\r\n          <template v-slot:content>\r\n            <ion-text>\r\n              <p class=\"title ion-text-start\">Данные паспорта</p>\r\n              <p>\r\n                <ion-text class=\"dot\">*</ion-text> - обязательное поле для\r\n                заполнения.\r\n              </p>\r\n            </ion-text>\r\n            <div v-for=\"(el, index) in formPass\" :key=\"el\">\r\n              <ion-accordion-group ref=\"addressQuery2\">\r\n                <ion-accordion value=\"first\">\r\n                  <Input\r\n                    :mask=\"el.mask\"\r\n                    slot=\"header\"\r\n                    :value=\"el.value\"\r\n                    :name=\"el.name\"\r\n                    :required=\"el.required\"\r\n                    @input=\"\r\n                      (e) => {\r\n                        el.value = e.target.value;\r\n                        addressQueryHandler(e, el.field);\r\n                      }\r\n                    \"\r\n                  />\r\n\r\n                  <div\r\n                    slot=\"content\"\r\n                    v-show=\"el.field === 'USER_REGION' && el.value\"\r\n                  >\r\n                    <div>\r\n                      <div v-for=\"address in addressList\" :key=\"address\">\r\n                        <ion-item\r\n                          button\r\n                          @click=\"\r\n                            () => {\r\n                              this.$refs.addressQuery2[index].$el.value =\r\n                                undefined;\r\n                              el.value = address.value;\r\n                            }\r\n                          \"\r\n                          :lines=\"\r\n                            addressList[addressList.length - 1]?.value ===\r\n                            address.value\r\n                              ? 'none'\r\n                              : 'full'\r\n                          \"\r\n                        >\r\n                          <ion-text>{{ address.value }}</ion-text>\r\n                        </ion-item>\r\n                      </div>\r\n                      <ion-item v-show=\"addressList?.length === 0\" lines=\"none\">\r\n                        Не найдено\r\n                      </ion-item>\r\n                    </div>\r\n                  </div>\r\n                </ion-accordion>\r\n              </ion-accordion-group>\r\n              <ion-text v-show=\"el.value.length === 0 && el.error\">\r\n                <p class=\"error\">Заполните поле</p>\r\n              </ion-text>\r\n            </div>\r\n          </template>\r\n        </LayoutBox>\r\n        <LayoutBox>\r\n          <template v-slot:content>\r\n            <ion-text>\r\n              <p class=\"title ion-text-start\">Данные об объекте газификации</p>\r\n              <p>\r\n                <ion-text class=\"dot\">*</ion-text> - обязательное поле для\r\n                заполнения.\r\n              </p>\r\n              <p class=\"sub-title\">\r\n                Адрес обьекта <ion-text class=\"dot\">*</ion-text>\r\n              </p>\r\n            </ion-text>\r\n\r\n            <ion-accordion-group ref=\"addressQuery3\">\r\n              <ion-accordion value=\"first\">\r\n                <Input\r\n                  slot=\"header\"\r\n                  :value=\"address\"\r\n                  name=\"Введите данные  \"\r\n                  @input=\"\r\n                    (e) => {\r\n                      changeAddress(e);\r\n                      addressQueryHandler(e, 'GAS_ADDRESS');\r\n                    }\r\n                  \"\r\n                /><!--  :changeHandler=\"changeAddress\" -->\r\n                <div slot=\"content\" v-show=\"address\">\r\n                  <div>\r\n                    <div v-for=\"addressItem in addressList\" :key=\"addressItem\">\r\n                      <ion-item\r\n                        button\r\n                        @click=\"\r\n                          () => {\r\n                            this.$refs.addressQuery3.$el.value = undefined;\r\n                            address = addressItem.value;\r\n                          }\r\n                        \"\r\n                        :lines=\"\r\n                          addressList[addressList.length - 1]?.value ===\r\n                          addressItem.value\r\n                            ? 'none'\r\n                            : 'full'\r\n                        \"\r\n                      >\r\n                        <ion-text>{{ addressItem.value }}</ion-text>\r\n                      </ion-item>\r\n                    </div>\r\n                    <ion-item v-show=\"addressList?.length === 0\" lines=\"none\">\r\n                      Не найдено\r\n                    </ion-item>\r\n                  </div>\r\n                </div>\r\n              </ion-accordion>\r\n            </ion-accordion-group>\r\n            <ion-text v-show=\"validation.address === true\">\r\n              <p class=\"error\">Заполните поле</p>\r\n            </ion-text>\r\n            <ion-text>\r\n              <p class=\"sub-title\">\r\n                Кадастровый номер земельного участка\r\n                <ion-text class=\"dot\">*</ion-text>\r\n              </p>\r\n            </ion-text>\r\n            <Input\r\n              :value=\"number\"\r\n              :changeHandler=\"changeNumber\"\r\n              name=\"Введите данные \"\r\n            />\r\n            <ion-text v-show=\"validation.number === true\">\r\n              <p class=\"error\">Заполните поле</p>\r\n            </ion-text>\r\n          </template>\r\n        </LayoutBox>\r\n      </template>\r\n    </Layout>\r\n  </ion-page>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from \"vue\";\r\nimport { useRouter } from \"vue-router\";\r\nimport Layout from \"../components/Layout.vue\";\r\nimport {\r\n  IonPage,\r\n  IonText,\r\n  IonAccordion,\r\n  IonAccordionGroup,\r\n  IonItem,\r\n} from \"@ionic/vue\";\r\nimport Back from \"../components/Back.vue\";\r\nimport { documentTextOutline, caretDownSharp } from \"ionicons/icons\";\r\nimport Input from \"../components/Input.vue\";\r\nimport LayoutBox from \"../components/LayoutBox.vue\";\r\nimport { mapActions } from \"pinia\";\r\n// import axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { Storage } from \"@ionic/storage\";\r\nimport { useServicesStore } from \"../stores/services\";\r\n\r\nexport default defineComponent({\r\n  name: \"servicesRequestGas\",\r\n  components: {\r\n    LayoutBox,\r\n    Input,\r\n    IonPage,\r\n    Layout,\r\n    IonText,\r\n    Back,\r\n    IonAccordion,\r\n    IonAccordionGroup,\r\n    IonItem,\r\n  },\r\n  methods: {\r\n    ...mapActions(useServicesStore, [\"getForms\", \"addressQuery\"]),\r\n    changeNumber(e) {\r\n      this.$data.number = e.target.value;\r\n    },\r\n    changeAddress(e) {\r\n      this.$data.address = e.target.value;\r\n    },\r\n    onFocusText(index) {\r\n      this.$refs.text[index].focus();\r\n    },\r\n\r\n    onFocusText2(index) {\r\n      this.$refs.text2[index].focus();\r\n    },\r\n    addressQueryHandler(v, field) {\r\n      if (field === \"USER_BIRTHPLACE\") {\r\n        this.addressQuery(v.target.value, field);\r\n      }\r\n      if (field === \"USER_ADDRESS\") {\r\n        this.addressQuery(v.target.value, field);\r\n      }\r\n      if (field === \"USER_REGION\" || field === \"GAS_ADDRESS\") {\r\n        this.addressQuery(v.target.value, field);\r\n      }\r\n    },\r\n    async storageHandler() {\r\n      const store = new Storage();\r\n      await store.create();\r\n      let formPass = {};\r\n      let checkUser = this.$data.formUser.filter((el) => {\r\n        if (el.required === true) {\r\n          el.error = true;\r\n          return el.value === \"\";\r\n        }\r\n      });\r\n      let checkPass = this.$data.formPass.filter((el) => {\r\n        if (el.required === true) {\r\n          el.error = true;\r\n          return el.value === \"\";\r\n        }\r\n      });\r\n\r\n      let checkRest = () => {\r\n        if (this.$data.address.length === 0) {\r\n          this.$data.validation.address = true;\r\n        } else {\r\n          this.$data.validation.address = false;\r\n        }\r\n        if (this.$data.number.length === 0) {\r\n          this.$data.validation.number = true;\r\n        } else {\r\n          this.$data.validation.number = false;\r\n        }\r\n      };\r\n      checkRest();\r\n\r\n      if (\r\n        checkUser.length === 0 &&\r\n        checkPass.length === 0 &&\r\n        Object.keys(this.$data.validation).every(\r\n          (k) => !this.$data.validation[k]\r\n        )\r\n      ) {\r\n        for (let index = 0; index < this.$data.formPass.length; index++) {\r\n          const element = this.$data.formPass[index];\r\n          formPass[element.field] = {\r\n            NAME: element.name,\r\n            VALUE: element.value,\r\n          };\r\n        }\r\n\r\n        let formUser = {\r\n          ...this.formFields[0],\r\n          ...formPass,\r\n          // ...this.$pinia.state.value?.services?.form[0],\r\n        };\r\n        for (let index = 0; index < this.$data.formUser.length; index++) {\r\n          const element = this.$data.formUser[index];\r\n          formUser[element.field] = {\r\n            NAME: element.name,\r\n            VALUE: element.value,\r\n          };\r\n        }\r\n\r\n        let userObject = {\r\n          ...formUser,\r\n          DATE_CREATE: {\r\n            NAME: \"Дата создания\",\r\n            VALUE: `${moment().format(\"DD.MM.YYYY hh:mm:ss\")} `,\r\n          },\r\n          TIMESTAMP_X: {\r\n            NAME: \"Время последнего изменения\",\r\n            VALUE: `${moment().format(\"DD.MM.YYYY hh:mm:ss\")} `,\r\n          },\r\n          NAME: {\r\n            NAME: \"Название\",\r\n            VALUE: `${moment().format(\"DD.MM.YYYY hh:mm\")} `,\r\n          },\r\n          USER: { NAME: \"USER\", VALUE: \"\", VALUE_ID: 0 },\r\n          GAS_ADDRESS: { NAME: \"Адрес объекта\", VALUE: this.$data.address },\r\n          GAS_KADASTR: {\r\n            NAME: \"Кадастровый номер земельного участка\",\r\n            VALUE: this.$data.number,\r\n          },\r\n        };\r\n        console.log(userObject, \"testuserObject\");\r\n        if (this.$pinia.state.value?.services?.form) {\r\n          this.$pinia.state.value.services.form = userObject;\r\n          await store.set(\"servicesTechAlliance\", JSON.stringify(userObject));\r\n        }\r\n        this.$router.push(\"/tabs/servicesRequestCalc\");\r\n      }\r\n    },\r\n  },\r\n  computed: {\r\n    formFields() {\r\n      return this.$pinia.state.value?.services?.formResponse?.result?.forms.filter(\r\n        (el) => {\r\n          return el.SERVICE.VALUE === \"Социальная газификация\";\r\n        }\r\n      );\r\n    },\r\n    addressList() {\r\n      return this.$pinia.state.value?.services?.addressResponse?.suggestions;\r\n    },\r\n  },\r\n  mounted() {\r\n    // this.addressQueryHandler()\r\n    this.getForms();\r\n    console.log(\r\n      this.formFields,\r\n\r\n      \"testtt222222\"\r\n    );\r\n  },\r\n\r\n  setup() {\r\n    const router = useRouter();\r\n    return { router, documentTextOutline, caretDownSharp };\r\n  },\r\n  data() {\r\n    return {\r\n      number: \"\",\r\n      address: \"\",\r\n      validation: {\r\n        address: false,\r\n        number: false,\r\n      },\r\n      formUser: [\r\n        {\r\n          field: \"USER_NAME\",\r\n          name: \"Имя\",\r\n          type: \"text\",\r\n          required: true,\r\n          value: \"\",\r\n          mask: null,\r\n        },\r\n        {\r\n          field: \"USER_LAST_NAME\",\r\n          mask: null,\r\n\r\n          name: \"Фамилия\",\r\n          type: \"text\",\r\n          required: true,\r\n          value: \"\",\r\n        },\r\n        {\r\n          field: \"USER_SECOND_NAME\",\r\n          mask: null,\r\n\r\n          name: \"Отчество\",\r\n          type: \"text\",\r\n          required: true,\r\n          value: \"\",\r\n        },\r\n        {\r\n          field: \"USER_BIRTHDATE\",\r\n          mask: \"##.##.####\",\r\n          name: \"Дата рождения\",\r\n          type: \"text\",\r\n          required: true,\r\n          value: \"\",\r\n        },\r\n        {\r\n          field: \"USER_SNILS\",\r\n          mask: \"###-###-### ##\",\r\n          name: \"СНИЛС\",\r\n          type: \"text\",\r\n          required: true,\r\n          value: \"\",\r\n        },\r\n        {\r\n          field: \"USER_INN\",\r\n          mask: \"############\",\r\n          name: \"ИНН\",\r\n          type: \"text\",\r\n          required: true,\r\n          value: \"\",\r\n        },\r\n        {\r\n          field: \"USER_BIRTHPLACE\",\r\n          mask: null,\r\n          name: \"Место рождения\",\r\n          type: \"text\",\r\n          required: true,\r\n          value: \"\",\r\n        },\r\n        {\r\n          field: \"USER_ADDRESS\",\r\n          mask: null,\r\n\r\n          name: \"Место жительства\",\r\n          type: \"text\",\r\n          required: true,\r\n          value: \"\",\r\n        },\r\n        {\r\n          field: \"USER_PHONE\",\r\n          mask: \"+7 (###) ###-##-##\",\r\n\r\n          name: \"Контактный телефон\",\r\n          type: \"text\",\r\n          required: true,\r\n          value: \"\",\r\n        },\r\n        {\r\n          field: \"USER_PHONE_2\",\r\n          mask: null,\r\n\r\n          name: \"Дополнительный контактный номер\",\r\n          type: \"text\",\r\n          required: false,\r\n          value: \"\",\r\n        },\r\n        {\r\n          field: \"USER_EMAIL\",\r\n          mask: null,\r\n\r\n          name: \"E-mail\",\r\n          type: \"text\",\r\n          required: true,\r\n          value: \"\",\r\n        },\r\n      ],\r\n      formPass: [\r\n        {\r\n          field: \"USER_PASSPORT_SERIAL\",\r\n          name: \"Серия паспорта\",\r\n          mask: \"####\",\r\n\r\n          type: \"text\",\r\n          required: true,\r\n          value: \"\",\r\n        },\r\n        {\r\n          field: \"USER_PASSPORT_NUM\",\r\n          type: \"text\",\r\n          name: \"Номер паспорта\",\r\n          mask: \"######\",\r\n\r\n          required: true,\r\n          value: \"\",\r\n        },\r\n        {\r\n          field: \"USER_PASS_WHO\",\r\n\r\n          name: \"Кем выдан\",\r\n          type: \"text\",\r\n          required: true,\r\n          value: \"\",\r\n        },\r\n        {\r\n          field: \"USER_PASS_DATE\",\r\n          mask: \"##.##.####\",\r\n\r\n          name: \"Дата выдачи паспорта\",\r\n          type: \"text\",\r\n          required: true,\r\n          value: \"\",\r\n        },\r\n        {\r\n          field: \"USER_REGION\",\r\n\r\n          name: \"Место регистрации\",\r\n          type: \"text\",\r\n          required: true,\r\n          value: \"\",\r\n        },\r\n      ],\r\n      forms: [],\r\n    };\r\n  },\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.sub-title {\r\n  margin-top: 0px;\r\n  margin-bottom: 10px;\r\n}\r\n.text {\r\n  margin-bottom: 10px;\r\n  margin-top: 0px;\r\n}\r\n\r\n.input {\r\n  border-radius: 8px;\r\n  padding: 15px;\r\n  width: 100%;\r\n  border: solid 1px #e0e0e0;\r\n  margin-bottom: 15px;\r\n  --padding-start: 15px;\r\n  --padding-bottom: 14px;\r\n  --padding-top: 14px;\r\n  --placeholder-color: #9e9e9e;\r\n  --placeholder-font-weight: 400;\r\n}\r\n\r\n.input:focus {\r\n  outline: none !important;\r\n  border: solid 1px #62d0ce;\r\n  caret-color: #000;\r\n}\r\n.input-wrapper {\r\n  position: relative;\r\n  width: 100%;\r\n}\r\n.input-text {\r\n  z-index: 0;\r\n  padding-left: 15px;\r\n  position: absolute;\r\n  left: 1px;\r\n  top: 15px;\r\n  width: 100%;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n}\r\n.inputTextBlue {\r\n  color: #0378b4;\r\n  font-weight: 700;\r\n}\r\n\r\ninput:not(:placeholder-shown) + ion-text {\r\n  display: none;\r\n}\r\n\r\n.dot {\r\n  color: #62d0ce;\r\n}\r\n\r\nion-item {\r\n  --inner-padding-start: 15px;\r\n  --inner-padding-bottom: 0px;\r\n  --padding-bottom: 0px;\r\n}\r\n</style>\r\n","import { render } from \"./ServicesRequestGas.vue?vue&type=template&id=64831335&scoped=true\"\nimport script from \"./ServicesRequestGas.vue?vue&type=script&lang=js\"\nexport * from \"./ServicesRequestGas.vue?vue&type=script&lang=js\"\n\nimport \"./ServicesRequestGas.vue?vue&type=style&index=0&id=64831335&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\aia\\\\Desktop\\\\STNG-MOBILE\\\\mobile-project-ionic\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-64831335\"]])\n\nexport default __exports__"],"names":["apiUrl","apiUrlStng2","useServicesStore","defineStore","id","state","formResponse","formResponseError","callInspectorResponse","callInspectorError","servicesResponse","servicesResponseError","form","select","GAS_SLUCHI","GAS_HARAKTER","GAS_VID_USLUG","servicesOneNext","techAllianceConnection","addressResponse","addressError","filesResponse","filesResponseError","listServicesResponse","listServicesResponseError","camerasResponse","camerasError","requestsInfo","getters","setForm","value","actions","async","axios","then","response","this","data","error","store","Storage","create","token","get","tokenParsed","JSON","parse","files","check","filter","el","file","index","length","element","title","push","field","text","forms","status","CODE","VALUE","lc","phone","LC","query","type","method","headers","Accept","Authorization","url","stringify","locations_boost","kladr_id","count","restrict_value","locations","city","country","_createElementBlock","class","padding","_ctx","onClick","_renderSlot","defineComponent","setup","name","components","props","Boolean","btnSrc","String","filledButton","height","Function","__exports__","render","_createElementVNode","slot","_createBlock","_component_ion_page","_createVNode","_component_Back","_component_Layout","filledBtn","outlineBtn","_component_ion_text","_hoisted_1","_hoisted_2","_Fragment","key","_component_ion_accordion_group","ref","_component_ion_accordion","_component_Input","mask","required","onInput","e","target","_hoisted_3","address","_component_ion_item","button","$refs","addressQuery","$el","undefined","lines","_hoisted_4","content","_component_LayoutBox","_hoisted_5","_hoisted_6","addressQuery2","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","addressItem","addressQuery3","_hoisted_11","_hoisted_12","changeHandler","_hoisted_13","number","LayoutBox","Input","IonPage","Layout","IonText","Back","IonAccordion","IonAccordionGroup","IonItem","methods","mapActions","changeNumber","$data","changeAddress","onFocusText","focus","onFocusText2","text2","addressQueryHandler","v","formPass","checkUser","formUser","checkPass","checkRest","validation","Object","keys","every","k","NAME","formFields","userObject","DATE_CREATE","moment","format","TIMESTAMP_X","USER","VALUE_ID","GAS_ADDRESS","GAS_KADASTR","console","log","$pinia","services","set","$router","computed","result","SERVICE","addressList","suggestions","mounted","getForms","router","useRouter","documentTextOutline","caretDownSharp"],"sourceRoot":""}